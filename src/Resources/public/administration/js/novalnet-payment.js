!function(){var e={662:function(){},886:function(){},669:function(){},357:function(){},455:function(){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"orders",key:"novalnet_extension",roles:{viewer:{privileges:["novalnet_transaction_details:read","novalnet_payment_token:read"],dependencies:[]},editor:{privileges:["novalnet_transaction_details:update","novalnet_payment_token:update","order_transaction:read","order_transaction:update"],dependencies:["novalnet_extension.viewer","order.editor"]},creator:{privileges:["novalnet_transaction_details:create","novalnet_payment_token:create"],dependencies:["novalnet_extension.viewer","novalnet_extension.editor"]},deleter:{privileges:["novalnet_transaction_details:delete","novalnet_payment_token:delete"],dependencies:["novalnet_extension.viewer"]}}}),Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"novalnet_payment",key:"novalnet_payment",roles:{viewer:{privileges:["system_config:read","sales_channel:read"],dependencies:[]},editor:{privileges:["system_config:update","system_config:create","system_config:delete","sales_channel:update"],dependencies:["novalnet_payment.viewer"]}}})},477:function(e,n,t){var a=t(662);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,t(534).A)("3f563017",a,!0,{})},261:function(e,n,t){var a=t(886);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,t(534).A)("c806885e",a,!0,{})},100:function(e,n,t){var a=t(669);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,t(534).A)("3aa3ab86",a,!0,{})},390:function(e,n,t){var a=t(357);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,t(534).A)("cc1b901e",a,!0,{})},534:function(e,n,t){"use strict";function a(e,n){for(var t=[],a={},l=0;l<n.length;l++){var i=n[l],o=i[0],s={id:e+":"+l,css:i[1],media:i[2],sourceMap:i[3]};a[o]?a[o].parts.push(s):t.push(a[o]={id:o,parts:[s]})}return t}t.d(n,{A:function(){return y}});var l,i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},s=i&&(document.head||document.getElementsByTagName("head")[0]),r=null,p=0,c=!1,d=function(){},m=null,u="data-vue-ssr-id",g="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function y(e,n,t,l){c=t,m=l||{};var i=a(e,n);return h(i),function(n){for(var t=[],l=0;l<i.length;l++){var s=o[i[l].id];s.refs--,t.push(s)}n?h(i=a(e,n)):i=[];for(var l=0;l<t.length;l++){var s=t[l];if(0===s.refs){for(var r=0;r<s.parts.length;r++)s.parts[r]();delete o[s.id]}}}}function h(e){for(var n=0;n<e.length;n++){var t=e[n],a=o[t.id];if(a){a.refs++;for(var l=0;l<a.parts.length;l++)a.parts[l](t.parts[l]);for(;l<t.parts.length;l++)a.parts.push(_(t.parts[l]));a.parts.length>t.parts.length&&(a.parts.length=t.parts.length)}else{for(var i=[],l=0;l<t.parts.length;l++)i.push(_(t.parts[l]));o[t.id]={id:t.id,refs:1,parts:i}}}}function v(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function _(e){var n,t,a=document.querySelector("style["+u+'~="'+e.id+'"]');if(a){if(c)return d;a.parentNode.removeChild(a)}if(g){var l=p++;n=b.bind(null,a=r||(r=v()),l,!1),t=b.bind(null,a,l,!0)}else n=w.bind(null,a=v()),t=function(){a.parentNode.removeChild(a)};return n(e),function(a){a?(a.css!==e.css||a.media!==e.media||a.sourceMap!==e.sourceMap)&&n(e=a):t()}}var f=(l=[],function(e,n){return l[e]=n,l.filter(Boolean).join("\n")});function b(e,n,t,a){var l=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=f(n,l);else{var i=document.createTextNode(l),o=e.childNodes;o[n]&&e.removeChild(o[n]),o.length?e.insertBefore(i,o[n]):e.appendChild(i)}}function w(e,n){var t=n.css,a=n.media,l=n.sourceMap;if(a&&e.setAttribute("media",a),m.ssrId&&e.setAttribute(u,n.id),l&&(t+="\n/*# sourceURL="+l.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(l))))+" */"),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},n={};function t(a){var l=n[a];if(void 0!==l)return l.exports;var i=n[a]={id:a,exports:{}};return e[a](i,i.exports,t),i.exports}t.d=function(e,n){for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="bundles/novalnetpayment/",window?.__sw__?.assetPath&&(t.p=window.__sw__.assetPath+"/bundles/novalnetpayment/"),function(){"use strict";t(455),t(390);let{Component:e,Mixin:n,Defaults:a}=Shopware,{Criteria:l}=Shopware.Data;e.register("novalnet-payment-settings",{template:'{% block novalnet_payment_settings %}\n	<sw-page class="novalnet-payment">\n		\n		{% block sw_promotion_v2_detail_header %}\n			<template #smart-bar-header>\n				<h2>{{ $tc(\'sw-settings.index.title\') }} <sw-icon name="regular-chevron-right-xs" small></sw-icon> {{ $tc(\'novalnet-payment.settingForm.title\') }} </h2>\n			</template>\n		{% endblock %}\n		\n		{% block novalnet_payment_settings_actions %}\n            <template #smart-bar-actions>\n            \n				{% block novalnet_payment_actions_save %}\n                    <sw-button-process class="sw-settings-login-registration__save-action"\n									   variant="primary"\n									   :value="isSaveSuccessful"\n                                       :isLoading="isLoading"\n                                       :disabled="isLoading || !acl.can(\'novalnet_payment.editor\')"\n                                       @click="onSave">\n                        {{ $tc(\'novalnet-payment.settingForm.buttons.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            \n            </template>\n        {% endblock %}\n    \n        {% block novalnet_payment_content %}\n			<template #content>\n			\n				{% block novalnet_payment_content_card_view %}\n					<sw-card-view>\n						{% block novalnet_payment_content_sales_channel_config %}\n							<sw-sales-channel-config v-model:value="config" \n													 ref="configComponent" \n													 domain="NovalnetPayment.settings">\n								\n								{% block novalnet_payment_content_sales_channelconfig_card %}\n								  <template #select="{ onInput, selectedSalesChannelId, salesChannel}">\n									{% block novalnet_payment_content_sales_channelconfig_card_sales_channel %}\n										<sw-card position-identifier="novalnet-payment-sales-channel-card" :title="$tc(\'global.entities.sales_channel\', 2)">\n											<sw-single-select v-model:value="selectedSalesChannelId"\n															labelProperty="translated.name"\n															valueProperty="id"\n															:disabled="!acl.can(\'novalnet_payment.editor\')"\n															:options="salesChannel"\n															:isLoading="isLoading"\n															@update:value="onInput">\n											</sw-single-select>\n										</sw-card>\n									{% endblock %}\n								  </template>\n								{% endblock %}\n								\n								{% block novalnet_payment_config_content_channel_config_cards %}\n									<template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n										{% block novalnet_payment_config_content_tabs %}\n											<sw-tabs>\n												{% block novalnet_payment_content_card_channel_config_credentials_card %}\n													<sw-tabs-item class="novalnet-payment-configuration-global-config"\n														:route="{ name: \'novalnet.payment.detail.credentials\', params: { id: $route.params.id }}"\n														:title="$tc(\'novalnet-payment.module.globalTitle\')">\n														{{ $tc(\'novalnet-payment.module.globalTitle\') }}\n													</sw-tabs-item>\n												{% endblock %}\n												\n												{% block novalnet_payment_content_card_channel_config_payment_card %}\n													<sw-tabs-item class="novalnet-payment-configuration-payment-config"\n																  :route="{ name: \'novalnet.payment.detail.configuration\', params: { id: $route.params.id }}"\n																  :title="$tc(\'novalnet-payment.module.paymentTitle\')">\n														{{ $tc(\'novalnet-payment.module.paymentTitle\') }}\n													</sw-tabs-item>\n												{% endblock %}\n											</sw-tabs>\n										{% endblock %}\n										\n										{% block novalnet_payment_configuration_content_router_view %}\n											<div v-if="isLoading && !actualConfigData" class="novalnet-payment-configurations">\n												<sw-skeleton />\n												<sw-skeleton />\n											</div>\n\n											<template v-else>\n												<router-view v-slot="{ Component }">\n													<component\n														:is="Component"\n														:isLoading="isLoading"\n														:actualConfigData="actualConfigData"\n														:allConfigs="allConfigs"\n														:selectedSalesChannelId="selectedSalesChannelId"\n													/>\n												</router-view>\n											</template>\n										{% endblock %}\n										\n									</template>\n								{% endblock %}\n								\n							</sw-sales-channel-config>\n						{% endblock %}\n						\n						{% block novalnet_payment_content_card_loading %}\n                            <sw-loader v-if="isLoading"></sw-loader>\n                        {% endblock %}\n                        \n					</sw-card-view>\n				{% endblock %}\n				\n			</template>\n        {% endblock %}\n	</sw-page>\n{% endblock %}\n',mixins:[n.getByName("notification"),n.getByName("sw-inline-snippet")],inject:["repositoryFactory","cacheApiService","acl","NovalPaymentApiCredentialsService"],data(){return{isLoading:!1,isSaveSuccessful:!1,clientIdFilled:!1,clientSecretFilled:!1,config:{},salesChannels:[]}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},watch:{config:{handler(e){if(!e)return;let n=this.$refs.configComponent.allConfigs.null;null===this.$refs.configComponent.selectedSalesChannelId||(this.config["NovalnetPayment.settings.clientId"]||(this.config["NovalnetPayment.settings.clientId"]=n["NovalnetPayment.settings.clientId"]),this.config["NovalnetPayment.settings.accessKey"]||(this.config["NovalnetPayment.settings.accessKey"]=n["NovalnetPayment.settings.accessKey"])),this.$emit("salesChannelChanged"),this.$emit("update:value",e)},deep:!0}},metaInfo(){return{title:this.$createTitle()}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0;let e=new l;e.addFilter(l.equalsAny("typeId",[a.storefrontSalesChannelTypeId,a.apiSalesChannelTypeId])),this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{e.add({id:null,translated:{name:this.$tc("sw-sales-channel-switch.labelDefaultOption")}}),this.salesChannels=e}).finally(()=>{this.isLoading=!1})},onSave(){this.isSaveSuccessful=!1,this.isLoading=!0;let e=this.getConfigValue("clientId"),n=this.getConfigValue("accessKey");if(""!==e&&void 0!==e&&(e=e.replace(/\s/g,"")),""!==n&&void 0!==n&&(n=n.replace(/\s/g,"")),void 0==e||""==e){this.isLoading=!1,this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:this.$tc("novalnet-payment.settingForm.emptyMessage")});return}if(void 0==n||""==n){this.isLoading=!1,this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:this.$tc("novalnet-payment.settingForm.emptyAccessKeyMessage")});return}this.checkBackendConfiguration()},getConfigValue(e){let n=this.$refs.configComponent.allConfigs.null;return null===this.$refs.configComponent.selectedSalesChannelId?this.config[`NovalnetPayment.settings.${e}`]:this.config[`NovalnetPayment.settings.${e}`]||n[`NovalnetPayment.settings.${e}`]},checkBackendConfiguration(){let e=this.getConfigValue("clientId").replace(/\s/g,""),n=this.getConfigValue("accessKey").replace(/\s/g,"");this.NovalPaymentApiCredentialsService.validateApiCredentials(e,n).then(e=>{if(void 0==e.serverResponse||""==e.serverResponse){this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:this.$tc("novalnet-payment.settingForm.apiFailureMessage")});return}if(100!=e.serverResponse.result.status_code){this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:e.serverResponse.result.status_text});return}e.tariffResponse.forEach(e=>{(void 0==this.config["NovalnetPayment.settings.tariff"]||""==this.config["NovalnetPayment.settings.tariff"])&&(this.config["NovalnetPayment.settings.tariff"]=e.id)}),this.config["NovalnetPayment.settings.clientKey"]=e.serverResponse.merchant.client_key,this.$refs.configComponent.save().then(e=>{this.isSaveSuccessful=!0,e&&(this.config=e),this.isLoading=!1,this.acl.can("system.clear_cache")&&this.cacheApiService.clear().then(()=>{}).catch(()=>{}),this.createNotificationSuccess({title:this.$tc("novalnet-payment.settingForm.titleSuccess"),message:this.$tc("novalnet-payment.settingForm.successMessage")})}).catch(()=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:this.$tc("novalnet-payment.settingForm.errorMessage")})})}).catch(e=>{this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:this.$tc("novalnet-payment.settingForm.errorMessage")}),this.isLoading=!1,this.isTestSuccessful=!1})}}});let{Component:i}=Shopware;i.register("novalnet-payment-settings-icon",{template:'{% block novalnet_payment_settings_icon %}\n    <img class="sw-settings-index__novalnet-payment-icon" :src="assetFilter(\'novalnetpayment/administration/plugin.png\')">\n{% endblock %}\n',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),t(261);let{Component:o,Mixin:s}=Shopware;o.register("novalnet-payment-credentials",{template:'{% block novalnet_payment_content_card_config_credentials %}\n	<sw-card class="sw-card--grid" \n			 :title="$tc(\'novalnet-payment.settingForm.credentials.cardTitle\')">\n				 \n		{% block novalnet_payment_content_card_config_credentials_card_container %}\n			<sw-container>\n				\n				{% block novalnet_payment_content_card_config_credentials_card_container_settings %}\n					<div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n						\n						{% block novalnet_payment_content_card_config_credentials_card_container_project_info %}\n							<sw-alert v-if="projectMode" variant="info" appearance="default" :showIcon="true" :closable="false">\n								{{ $tc(\'novalnet-payment.module.projectInfo\') }}\n							</sw-alert>\n						{% endblock %}\n						\n						{% block novalnet_payment_content_card_config_credentials_card_container_general_info %}\n							<div v-html="generalInformation" class="novalnet_payment-settings-project"></div>\n							<div v-html="installationInformation" class="novalnet_payment-settings-project"></div>\n						{% endblock %}\n\n						{% block novalnet_payment_content_card_config_credentials_card_container_settings_client_id %}\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.clientId\']"\n												:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.clientId\']">\n								<template #content="props">\n									<sw-text-field name="NovalnetPayment.settings.clientId"\n												   :value="props.currentValue"\n												   :label="$tc(\'novalnet-payment.settingForm.credentials.activationKey.label\')"\n												   :helpText="$tc(\'novalnet-payment.settingForm.credentials.activationKey.tooltipText\')"\n												   :disabled="!acl.can(\'novalnet_payment.editor\')"\n												   @update:value="onCheckApi">\n									</sw-text-field>\n								</template>\n							</sw-inherit-wrapper>\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.accessKey\']"\n												:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.accessKey\']">\n								<template #content="props">\n									<sw-text-field name="NovalnetPayment.settings.accessKey"\n												   :value="props.currentValue"\n												    autocomplete="off"\n												   :label="$tc(\'novalnet-payment.settingForm.credentials.accessKey.label\')"\n												   :helpText="$tc(\'novalnet-payment.settingForm.credentials.accessKey.tooltipText\')"\n												   :disabled="!acl.can(\'novalnet_payment.editor\')"\n												   @update:value="onCheckApi">\n									</sw-text-field>\n								</template>\n							</sw-inherit-wrapper>\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.clientKey\']"\n												:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.clientKey\']">\n								<template #content="props">\n									<sw-text-field name="NovalnetPayment.settings.clientKey"\n												   v-show="shouldDisable"\n												   :value="props.currentValue"\n												   :disabled="!acl.can(\'novalnet_payment.editor\')">\n									</sw-text-field>\n								</template>\n							</sw-inherit-wrapper>\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.tariff\']"\n											:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.tariff\']">\n								<template #content="props">\n									<sw-single-select name="NovalnetPayment.settings.tariff"\n													  :v-model:value="tariffId"\n													  :options="tariffOptions"\n													  :label="$tc(\'novalnet-payment.settingForm.credentials.tariff.label\')"\n													  :helpText="$tc(\'novalnet-payment.settingForm.credentials.tariff.tooltipText\')"\n													  :disabled="!acl.can(\'novalnet_payment.editor\')"\n													  :value="props.currentValue"\n													  @update:value="props.updateCurrentValue">\n									</sw-single-select>\n								</template>\n							</sw-inherit-wrapper>\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.emailMode\']"\n												:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.emailMode\']"\n											    :customInheritationCheckFunction="checkBoolFieldInheritance">\n								<template #content="props">\n									<sw-switch-field name="NovalnetPayment.settings.emailMode"\n													 bordered\n													 :mapInheritance="props"\n													 :isInherited="props.isInherited"\n												     :label="$tc(\'novalnet-payment.settingForm.credentials.orderEmailMode.label\')"\n												     :helpText="$tc(\'novalnet-payment.settingForm.credentials.orderEmailMode.tooltipText\')"\n												     :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n												     :value="props.currentValue"\n												     @update:value="props.updateCurrentValue">\n									</sw-switch-field>\n								</template>\n							</sw-inherit-wrapper>\n						{% endblock %}\n					</div>\n				{% endblock %}\n			</sw-container>\n		{% endblock %}\n\n		{% block novalnet_payment_content_card_loading %}\n            <sw-loader v-if="isLoading"></sw-loader>\n        {% endblock %}\n	</sw-card>\n{% endblock %}\n\n{% block novalnet_payment_content_card_config_merchant_credentials %}\n	<sw-card class="sw-card--grid"\n			 :title="$tc(\'novalnet-payment.settingForm.merchantSettings.cardTitle\')">\n		\n		{% block novalnet_payment_content_card_config_merchant_credentials_card_container %}\n			<sw-container>\n			\n				{% block novalnet_payment_content_card_config_merchant_credentials_card_container_settings %}\n					<div v-if="actualConfigData" class="novalnet_payment-settings-merchant-credentials">\n\n						{% block novalnet_payment_content_card_config_merchant_credentials_card_container_settings_ip %}\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.callbackUrl\']"\n												:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.callbackUrl\']">\n								<template #content="props">\n									<sw-text-field name="NovalnetPayment.settings.callbackUrl"\n												   v-model:value="NovalnetPaymentCallBackUrl"\n												   :mapInheritance="props"\n												   :isInherited="props.isInherited"\n												   :label="$tc(\'novalnet-payment.settingForm.merchantSettings.callbackUrl.label\')"\n												   :helpText="$tc(\'novalnet-payment.settingForm.merchantSettings.callbackUrl.tooltipText\')"\n												   :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n												   @update:value="props.updateCurrentValue">\n									</sw-text-field>\n								</template>\n							</sw-inherit-wrapper>\n							<sw-button-process class="novalnet-payment-callback-field" :disabled="false || !acl.can(\'novalnet_payment.editor\')" :isLoading="buttonLoad"  @click="configureWebhookUrl()">\n										{{ $tc(\'novalnet-payment.settingForm.merchantSettings.callbackUrl.button\') }}\n							</sw-button-process>\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.deactivateIp\']"\n												:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.deactivateIp\']"\n												:customInheritationCheckFunction="checkBoolFieldInheritance">\n								<template #content="props">\n									<sw-switch-field name="NovalnetPayment.settings.deactivateIp"\n													 bordered\n													 :label="$tc(\'novalnet-payment.settingForm.merchantSettings.deactivateIp.label\')"\n													 :helpText="$tc(\'novalnet-payment.settingForm.merchantSettings.deactivateIp.tooltipText\')"\n													 :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n													 :isInherited="props.isInherited"\n													 :value="props.currentValue"\n													 :mapInheritance="props"\n													 @update:value="props.updateCurrentValue">\n									</sw-switch-field>\n								</template>\n							</sw-inherit-wrapper>\n							<sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.mailTo\']"\n												:inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.mailTo\']"\n												:customInheritationCheckFunction="checkTextFieldInheritance" >\n								<template #content="props">\n									<sw-text-field name="NovalnetPayment.settings.mailTo"\n												   :mapInheritance="props"\n												   :isInherited="props.isInherited"\n												   :label="$tc(\'novalnet-payment.settingForm.merchantSettings.mailTo.label\')"\n												   :helpText="$tc(\'novalnet-payment.settingForm.merchantSettings.mailTo.tooltipText\')"\n												   :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n												   :value="props.currentValue"\n												   @update:value="props.updateCurrentValue">\n									</sw-text-field>\n								</template>\n							</sw-inherit-wrapper>\n						{% endblock %}\n					</div>\n				{% endblock %}\n			</sw-container>\n		{% endblock %}\n	</sw-card>\n{% endblock %}\n',mixins:[s.getByName("notification"),s.getByName("sw-inline-snippet")],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{required:!0}},data(){return{shouldDisable:!1,projectMode:!1,isLoading:!1,isRequested:"",showMessage:!1,buttonLoad:!1,tariffId:"",tariffOptions:[],NovalnetPaymentCallBackUrl:(window.location.protocol+"//"+window.location.host+window.location.pathname).split("/admin").join("")+"/novalnet/callback",generalInformation:this.$tc("novalnet-payment.module.generalInfo"),installationInformation:this.$tc("novalnet-payment.module.installationInfo")}},inject:["NovalPaymentApiCredentialsService","acl"],created(){this.createdComponent()},updated(){this.createdComponent()},methods:{checkTextFieldInheritance(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance(e){return"boolean"!=typeof e},onCheckApi(){if("NovalnetPayment.settings.clientId"===event.target.name?this.actualConfigData["NovalnetPayment.settings.clientId"]=event.target.value:"NovalnetPayment.settings.accessKey"===event.target.name&&(this.actualConfigData["NovalnetPayment.settings.accessKey"]=event.target.value),void 0==event||"input"!=event.type){if(""===this.actualConfigData["NovalnetPayment.settings.clientId"]&&""===this.actualConfigData["NovalnetPayment.settings.accessKey"]){this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:this.$tc("novalnet-payment.settingForm.apiFailureMessage")});return}this.isRequested="",this.showMessage=!0,this.createdComponent()}},createdComponent(){if(void 0!==this.actualConfigData&&this.isRequested!==this.selectedSalesChannelId){this.isRequested=this.selectedSalesChannelId;let e=this.actualConfigData["NovalnetPayment.settings.clientId"]||this.allConfigs.null["NovalnetPayment.settings.clientId"],n=this.actualConfigData["NovalnetPayment.settings.accessKey"]||this.allConfigs.null["NovalnetPayment.settings.accessKey"];void 0!==e&&""!==e&&void 0!==n&&""!==n&&(e=e.replace(/\s/g,""),n=n.replace(/\s/g,""),this.isLoading=!0,this.NovalPaymentApiCredentialsService.validateApiCredentials(e,n).then(e=>{let n=e.serverResponse.result.status_code;this.isLoading=!1,100!==n?(!0===this.showMessage&&this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:e.serverResponse.result.status_text,autoClose:!0}),this.showMessage=!1):(this.tariffOptions=[],e.tariffResponse.forEach(n=>{this.actualConfigData["NovalnetPayment.settings.clientKey"]=e.serverResponse.merchant.client_key,this.tariffOptions.push({value:n.id,label:n.name}),(void 0===this.tariffId||""===this.tariffId)&&(this.tariffId={value:n.id,label:n.name}),!0===this.showMessage&&this.createNotificationSuccess({title:this.$tc("novalnet-payment.settingForm.titleSuccess"),message:this.$tc("novalnet-payment.settingForm.successMessage"),autoClose:!0}),this.showMessage=!1,1===e.serverResponse.merchant.test_mode&&(this.projectMode=!0)}))}).catch(e=>{this.isLoading=!1}))}},configureWebhookUrl(){let e=this.actualConfigData["NovalnetPayment.settings.clientId"]||this.allConfigs.null["NovalnetPayment.settings.clientId"],n=this.actualConfigData["NovalnetPayment.settings.accessKey"]||this.allConfigs.null["NovalnetPayment.settings.accessKey"];if(void 0===e||""===e||void 0===n||""===n){this.createNotificationError({title:this.$tc("novalnet-payment.settingForm.titleError"),message:this.$tc("novalnet-payment.settingForm.apiFailureMessage")});return}if(this.NovalnetPaymentCallBackUrl){if(!1===/^(http|https):\/\/[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,}(:[0-9]{1,5})?(\/.*)?$/i.test(this.NovalnetPaymentCallBackUrl))return this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.webhookUrlFailure")}),!1;this.buttonLoad=!0,this.NovalPaymentApiCredentialsService.configureWebhookUrl(this.NovalnetPaymentCallBackUrl,e,n).then(e=>{void 0!==e.result.status&&null!=e.result.status&&""!==e.result.status&&"SUCCESS"===e.result.status?this.createNotificationSuccess({message:this.$tc("novalnet-payment.settingForm.webhookUrlSuccess")}):void 0!==e.result.status_text&&null!=e.result.status_text&&""!==e.result.status_text?this.createNotificationError({message:e.result.status_text}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.webhookUrlFailure")}),this.buttonLoad=!1}).catch(e=>{this.buttonLoad=!1})}}}}),t(477);let{Component:r}=Shopware;r.register("novalnet-payment-configuration",{template:'{% block novalnet_payment_content_card_channel_config_payment %}\n    \n    {% block novalnet_payment_content_card_channel_config_payment_card_sepa %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_sepa_container %}\n                <sw-container>\n\n                    \n                    <sw-collapse>\n                        \n                        <template #header="{ expanded }">\n                            <div class="novalnet_payment_card_title">\n                                    {{ $tc(\'novalnet-payment.settingForm.paymentSettings.sepa.cardTitle\') }}\n                            </div>\n                            <div class="novalnet_payment_card_head_down_bar">\n                                <sw-icon name="regular-chevron-down" small="true">\n                                </sw-icon>\n                            </div>\n                        </template>\n\n                        \n                        <template #content>\n                            {% block novalnet_payment_content_card_channel_config_payment_card_sepa_container_settings %}\n                                <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                    {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepa %}\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaTestMode\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaTestMode\']"\n                                                            :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                            <template #content="props">\n                                                <sw-switch-field name="NovalnetPayment.settings.sepaTestMode"\n                                                                 :mapInheritance="props"\n                                                                 :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                 :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                                 :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                                 :value="props.currentValue"\n                                                                 @update:value="props.updateCurrentValue">\n                                                </sw-switch-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaOneclick\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaOneclick\']"\n                                                            :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                            <template #content="props">\n                                                <sw-switch-field name="NovalnetPayment.settings.sepaOneclick"\n                                                                 :mapInheritance="props"\n                                                                 :label="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.label\')"\n                                                                 :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText\')"\n                                                                 :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                 :isInherited="props.isInherited"\n                                                                 :value="props.currentValue"\n                                                                 @update:value="props.updateCurrentValue">\n                                                </sw-switch-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaDueDate\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaDueDate\']">\n                                            <template #content="props">\n                                                <sw-number-field name="NovalnetPayment.settings.sepaDueDate"\n                                                                 numberType="int"\n                                                                 :min="3"\n                                                                 :max="14"\n                                                                 :mapInheritance="props"\n                                                                 :label="$tc(\'novalnet-payment.settingForm.paymentSettings.sepa.dueDate.label\')"\n                                                                 :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.sepa.dueDate.tooltipText\')"\n                                                                 :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                 :isInherited="props.isInherited"\n                                                                 :value="props.currentValue"\n                                                                 @update:value="props.updateCurrentValue">\n                                                </sw-number-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaOnHold\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaOnHold\']">\n                                            <template #content="props">\n                                                <sw-single-select name="NovalnetPayment.settings.sepaOnHold"\n                                                                  labelProperty="name"\n                                                                  valueProperty="id"\n                                                                  :options="onHoldZeroOptions"\n                                                                  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                                  :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                                  :mapInheritance="props"\n                                                                  :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                  :isInherited="props.isInherited"\n                                                                  :value="props.currentValue == null ? selected : props.currentValue"\n                                                                  @update:value="props.updateCurrentValue">\n                                                </sw-single-select>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaOnHoldAmount\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaOnHoldAmount\']">\n                                            <template #content="props">\n                                                <sw-number-field name="NovalnetPayment.settings.sepaOnHoldAmount"\n                                                                 numberType="int"\n                                                                 :mapInheritance="props"\n                                                                 :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                 :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                                 :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                                 :value="props.currentValue == 0 ? null : props.currentValue"\n                                                                 @update:value="props.updateCurrentValue">\n                                                </sw-number-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaNotify\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaNotify\']"\n                                                            :customInheritationCheckFunction="checkTextFieldInheritance">\n                                            <template #content="props">\n                                                <sw-text-field name="NovalnetPayment.settings.sepaNotify"\n                                                               :mapInheritance="props"\n                                                               :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                               :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                               :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                               :value="props.currentValue"\n                                                               @update:value="props.updateCurrentValue">\n                                                </sw-text-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </template>\n                    </sw-collapse>\n                </sw-container>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n    \n    {% block novalnet_payment_content_card_channel_config_payment_card_directdebitach %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_directdebitach_container %}\n                <sw-container>\n\n                    \n                    <sw-collapse>\n                        \n                        <template #header="{ expanded }">\n                            <div class="novalnet_payment_card_title">\n                                    {{ $tc(\'novalnet-payment.settingForm.paymentSettings.directdebitach.cardTitle\') }}\n                            </div>\n                            <div class="novalnet_payment_card_head_down_bar">\n                                <sw-icon name="regular-chevron-down" small="true">\n                                </sw-icon>\n                            </div>\n                        </template>\n\n                        \n                        <template #content>\n                            {% block novalnet_payment_content_card_channel_config_payment_card_directdebitach_container_settings %}\n                                <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                    {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_directdebitach %}\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.directdebitachTestMode\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.directdebitachTestMode\']"\n                                                            :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                            <template #content="props">\n                                                <sw-switch-field name="NovalnetPayment.settings.directdebitachTestMode"\n                                                                 :mapInheritance="props"\n                                                                 :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                 :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                                 :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                                 :value="props.currentValue"\n                                                                 @update:value="props.updateCurrentValue">\n                                                </sw-switch-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.directdebitachOneclick\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.directdebitachOneclick\']"\n                                                            :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                            <template #content="props">\n                                                <sw-switch-field name="NovalnetPayment.settings.directdebitachOneclick"\n                                                                 :mapInheritance="props"\n                                                                 :label="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.label\')"\n                                                                 :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText\')"\n                                                                 :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                 :isInherited="props.isInherited"\n                                                                 :value="props.currentValue"\n                                                                 @update:value="props.updateCurrentValue">\n                                                </sw-switch-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.directdebitachOnHold\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.directdebitachOnHold\']">\n                                            <template #content="props">\n                                                <sw-single-select name="NovalnetPayment.settings.directdebitachOnHold"\n                                                                  labelProperty="name"\n                                                                  valueProperty="id"\n                                                                  :options="onCaptureZeroOptions"\n                                                                  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                                  :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                                  :mapInheritance="props"\n                                                                  :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                                  :isInherited="props.isInherited"\n                                                                  :value="props.currentValue == null ? selected : props.currentValue"\n                                                                  @update:value="props.updateCurrentValue">\n                                                </sw-single-select>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                        <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.directdebitachNotify\']"\n                                                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.directdebitachNotify\']"\n                                                            :customInheritationCheckFunction="checkTextFieldInheritance">\n                                            <template #content="props">\n                                                <sw-text-field name="NovalnetPayment.settings.directdebitachNotify"\n                                                               :mapInheritance="props"\n                                                               :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                               :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                               :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                               :value="props.currentValue"\n                                                               @update:value="props.updateCurrentValue">\n                                                </sw-text-field>\n                                            </template>\n                                        </sw-inherit-wrapper>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </template>\n                    </sw-collapse>\n                </sw-container>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.sepaguarantee.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n\n                        {% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee_container_settings %}\n                            <div class="guarantee_conditions">\n                                <p class="guarantee_condtions_headings">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title\') }}\n                                </p>\n                                <p>\n                                    <ul class="guarantee_condtions_list">\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.amount\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address\') }}</li>\n                                    </ul>\n                                </p>\n                            </div>\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepaguarantee %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepaguaranteeTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :isInherited="props.isInherited"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeOneclick\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeOneclick\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepaguaranteeOneclick"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :isInherited="props.isInherited"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount"\n                                                             :mapInheritance="props"\n                                                             :min="999"\n                                                             :allowEmpty="false"\n                                                             numberType="integer"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    \n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeOnHold\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeOnHold\']">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.sepaguaranteeOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onholdOptions"\n                                                              :mapInheritance="props"\n                                                              :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                              :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :isInherited="props.isInherited"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    \n                                     <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.sepaguaranteeOnHoldAmount"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeForceGuarantee\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeForceGuarantee\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepaguaranteeForceGuarantee"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.forceGuarantee.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.forceGuarantee.tooltipText\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :isInherited="props.isInherited"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <div class="novalnet_payment_force_guarantee_enable_condtion">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.forceGuarantee.sepacondition\') }}</div>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeAllowB2B\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeAllowB2B\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepaguaranteeAllowB2B"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :isInherited="props.isInherited"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepaguaranteeNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepaguaranteeNotify\']"\n                                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.sepaguaranteeNotify"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :isInherited="props.isInherited"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_creditcard %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_creditcard_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_creditcard %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.creditcardTestMode"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardOneclick\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardOneclick\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.creditcardOneclick"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardInline\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardInline\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.creditcardInline"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.inline.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.inline.tooltipText\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardEnforcecc3D\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardEnforcecc3D\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.creditcardEnforcecc3D"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.tooltipText\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardOnHold\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardOnHold\']">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.creditcardOnHold"\n                                                              :mapInheritance="props"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onHoldZeroOptions"\n                                                              :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                              :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                   <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.creditcardOnHoldAmount"\n                                                             :mapInheritance="props"\n                                                             numberType="int"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardNotify\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.creditcardNotify"\n                                                           :mapInheritance="props"\n                                                           :isInherited="props.isInherited"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n\n                        <div class="novalnet_payment_css_card_title">\n                                {{ $tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.css.cardTitle\') }}\n                        </div>\n\n                        {% block novalnet_payment_content_card_channel_config_payment_card_css_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_creditcard_css %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardLabel\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardLabel\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.creditcardLabel"\n                                                           :mapInheritance="props"\n                                                           \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.css.label\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardInput\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardInput\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.creditcardInput"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.css.input\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.creditcardCss\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.creditcardCss\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.creditcardCss"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.css.css\')"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_applepay %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_applepay_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.applepay.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_applepay_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_applepay %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.applepayTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.applepayTestMode"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayOnHold\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.applepayOnHold\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.applepayOnHold\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.applepayOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :mapInheritance="props"\n                                                              :options="onHoldZeroOptions"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.applepayOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.applepayOnHoldAmount"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepaySellerName\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.applepaySellerName\']"\n                                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.applepaySellerName"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.sellerName.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.sellerName.tooltipText\')"\n                                                           :placeholder="sellerNamePlaceHolder"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                     <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.applepayNotify\']"\n                                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.applepayNotify"\n                                                           :mapInheritance="props"  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n\n                                    <div class="novalnet_payment_applepay">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.applepay.buttonTitle\') }}</div>\n\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayButtonType\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.applepayButtonType\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.applepayButtonType\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.buttonTypeLabel\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.applepayButtonType"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :mapInheritance="props"\n                                                              :options="buttonTypeOptions"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayButtonTheme\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.applepayButtonTheme\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.applepayButtonTheme\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.label\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.applepayButtonTheme"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="buttonThemeOptions"\n                                                              :mapInheritance="props"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayButtonHeight\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.applepayButtonHeight\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.applepayButtonHeight\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.buttonHeight.label\')" \n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.buttonHeight.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.applepayButtonHeight"\n                                                             numberType="int" \n                                                             :step="null" \n                                                             :min="30" \n                                                             :max="64"\n                                                             :mapInheritance="props"\n                                                             :value="props.currentValue"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayButtonRadius\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.applepayButtonRadius\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.applepayButtonRadius\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.buttonRadius.label\')" \n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.buttonRadius.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.applepayButtonRadius"\n                                                             numberType="int" \n                                                             :step="null" \n                                                             :min="0" \n                                                             :max="10"\n                                                             :mapInheritance="props"\n                                                             :value="props.currentValue"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.applepayDisplayFields\']"\n                                                    :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.applepayDisplayFields\')"\n                                                    :inheritedValue="getInheritValue(\'NovalnetPayment.settings.applepayDisplayFields\')"\n                                                    :label="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.displayFields.label\')"\n                                                    :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.displayFields.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-multi-select name="NovalnetPayment.settings.applepayDisplayFields"\n                                                     :placeholder="$tc(\'novalnet-payment.settingForm.paymentSettings.applepay.displayFields.emptyText\')"\n                                                     :mapInheritance="props"\n                                                     labelProperty="name"\n                                                     valueProperty="id"\n                                                     :options="displayFieldOptions"\n                                                     :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                     :value="props.currentValue"\n                                                     @update:value="props.updateCurrentValue">\n                                            </sw-multi-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_googlepay %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_googlepay_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_googlepay_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_googlepay %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.googlepayTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.googlepayTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayOnHold\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.googlepayOnHold\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.googlepayOnHold\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.googlepayOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onHoldZeroOptions"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.googlepayOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.googlepayOnHoldAmount"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepaySellerName\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.googlepaySellerName\']"\n                                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.googlepaySellerName"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.sellerName.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.sellerName.tooltipText\')"\n                                                           :placeholder="sellerNamePlaceHolder"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayMerchantId\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.googlepayMerchantId\']"\n                                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.googlepayMerchantId"\n                                                           :mapInheritance="props"  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.merchantId.label\')" :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.merchantId.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayEnforcecc3D\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.googlepayEnforcecc3D\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.googlepayEnforcecc3D"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.tooltipText\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.googlepayNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.googlepayNotify"\n                                                           :mapInheritance="props"  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <div class="novalnet_payment_googlepay">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.buttonTitle\') }}</div>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayButtonType\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.googlepayButtonType\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.googlepayButtonType\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.buttonTypeLabel\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.googlepayButtonType"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="buttonGpayTypeOptions"\n                                                              :mapInheritance="props"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayButtonHeight\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.googlepayButtonHeight\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.googlepayButtonHeight\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.buttonHeight.label\')" \n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.buttonHeight.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.googlepayButtonHeight"\n                                                             numberType="int" \n                                                             :step="null" \n                                                             :min="40" \n                                                             :max="100"\n                                                             :mapInheritance="props"\n                                                             :value="props.currentValue"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.googlepayDisplayFields\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.googlepayDisplayFields\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.googlepayDisplayFields\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-multi-select name="NovalnetPayment.settings.googlepayDisplayFields"\n                                                     :placeholder="$tc(\'novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.emptyText\')"\n                                                     labelProperty="name"\n                                                     valueProperty="id"\n                                                     :mapInheritance="props"\n                                                     :options="displayFieldOptions"\n                                                     :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                     :value="props.currentValue"\n                                                     @update:value="props.updateCurrentValue">\n                                            </sw-multi-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_invoice %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_invoice_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.invoice.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_invoice_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoice %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.invoiceTestMode"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceDueDate\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.invoiceDueDate\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.invoiceDueDate\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.invoice.dueDate.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.invoice.dueDate.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.invoiceDueDate"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :min="7"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceOnHold\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.invoiceOnHold\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.invoiceOnHold\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.invoiceOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onholdOptions"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.invoice.invoiceOnHoldAmount"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.invoiceNotify"\n                                                           :mapInheritance="props"  \n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_invoiceguarantee %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_invoiceguarantee_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.invoiceguarantee.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_invoiceguarantee_container_settings %}\n                            <div class="guarantee_conditions">\n                                <p class="guarantee_condtions_headings">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title\') }}\n                                </p>\n                                <p>\n                                    <ul class="guarantee_condtions_list">\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.amount\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address\') }}</li>\n                                    </ul>\n                                </p>\n                            </div>\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoiceguarantee %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceguaranteeTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceguaranteeTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.invoiceguaranteeTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :isInherited="props.isInherited"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount\')" \n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount"\n                                                           :mapInheritance="props"\n                                                           :min="999"\n                                                           :allowEmpty="false"\n                                                           numberType="integer"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceguaranteeOnHold\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.invoiceguaranteeOnHold\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.invoiceguaranteeOnHold\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.invoiceguaranteeOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onholdOptions"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceguaranteeOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceguaranteeOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.invoiceguaranteeOnHoldAmount"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceguaranteeForceGuarantee\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceguaranteeForceGuarantee\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.invoiceguaranteeForceGuarantee"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.forceGuarantee.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.forceGuarantee.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <div class="novalnet_payment_force_guarantee_enable_condtion">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.forceGuarantee.invoicecondition\') }}</div>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceguaranteeAllowB2B\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceguaranteeAllowB2B\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.invoiceguaranteeAllowB2B"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceguaranteeNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceguaranteeNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.invoiceguaranteeNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_prepayment %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_prepayment_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.prepayment.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n\n                        {% block novalnet_payment_content_card_channel_config_payment_card_prepayment_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_prepayment %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.prepaymentTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.prepaymentTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.prepaymentTestMode"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.prepaymentDueDate\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.prepaymentDueDate\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.prepaymentDueDate\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.prepayment.dueDate.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.prepayment.dueDate.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.prepaymentDueDate"\n                                                             numberType="int"\n                                                             :min="7"\n                                                             :max="28"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.prepaymentNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.prepaymentNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.prepaymentNotify"\n                                                           :mapInheritance="props"  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_ideal %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_ideal_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.ideal.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_ideal_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_ideal %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.idealTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.idealTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.idealTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.idealNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.idealNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.idealNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_sofort %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_sofort_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.sofort.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_sofort_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sofort %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sofortTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sofortTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sofortTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sofortNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sofortNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.sofortNotify"\n                                                           :mapInheritance="props"  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_onlinebanktransfer %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_onlinebanktransfer_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.onlinebanktransfer.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_onlinebanktransfer_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_onlinebanktransfer %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.onlinebanktransferTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.onlinebanktransferTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.onlinebanktransferTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.onlinebanktransferNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.onlinebanktransferNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.onlinebanktransferNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_giropay %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_giropay_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.giropay.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_giropay_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_giropay %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.giropayTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.giropayTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.giropayTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.giropayNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.giropayNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.giropayNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_cashpayment %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_cashpayment_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.cashpayment.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_cashpayment_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_cashpayment %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.cashpaymentTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.cashpaymentTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.cashpaymentTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.cashpaymentDueDate\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.cashpaymentDueDate\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.cashpaymentDueDate\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.cashpayment.dueDate.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.cashpayment.dueDate.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.cashpaymentDueDate"\n                                                             numberType="int"\n                                                             :min="1"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.cashpaymentNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.cashpaymentNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.cashpaymentNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_przelewy24 %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_przelewy24_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.przelewy24.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_przelewy24_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_przelewy24 %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.przelewy24TestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.przelewy24TestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.przelewy24TestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.przelewy24Notify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.przelewy24Notify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.przelewy24Notify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_eps %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_eps_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.eps.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_eps_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_eps %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.epsTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.epsTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.epsTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.epsNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.epsNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.epsNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n    \n    {% block novalnet_payment_content_card_channel_config_payment_blik %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_blik_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.blik.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_blik_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_blik %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.blikTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.blikTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.blikTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.blikNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.blikNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.blikNotify"\n                                                           :mapInheritance="props"  :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_invoiceinstalment %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_invoiceinstalment_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.invoiceinstalment.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_invoiceinstalment_container_settings %}\n                            <div class="guarantee_conditions">\n                                <p class="guarantee_condtions_headings">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title\') }}\n                                </p>\n                                <p>\n                                    <ul class="guarantee_condtions_list">\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentAmount\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentCycleAmount\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age\') }}</li>\n                                        <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address\') }}</li>\n                                    </ul>\n                                </p>\n                            </div>\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoiceinstalment %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceinstalmentTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.invoiceinstalmentTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentLabel\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentTooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount"\n                                                           :mapInheritance="props"\n                                                           :min="1998"\n                                                           :allowEmpty="false"\n                                                           numberType="integer"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentOnHold\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.invoiceinstalmentOnHold\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.invoiceinstalmentOnHold\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.invoiceinstalmentOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onholdOptions"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentOnHoldAmount\']">>\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.invoiceinstalmentOnHoldAmount"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentProductPageInfo\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceinstalmentProductPageInfo\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.invoiceinstalmentProductPageInfo"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.productPageInfo.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.productPageInfo.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentCycles\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.invoiceinstalmentCycles\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.invoiceinstalmentCycles\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.label\')"\n                                                     :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-multi-select name="NovalnetPayment.settings.invoiceinstalmentCycles"\n                                                     labelProperty="name"\n                                                     valueProperty="id"\n                                                     :options="instalmentOptions"\n                                                     :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                     :isInherited="props.isInherited"\n                                                     :value="props.currentValue"\n                                                     @update:value="props.updateCurrentValue">\n                                            </sw-multi-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentAllowB2B\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.invoiceinstalmentAllowB2B\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.invoiceinstalmentAllowB2B"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.invoiceinstalmentNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.invoiceinstalmentNotify"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :mapInheritance="props"  \n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_sepainstalment %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_sepainstalment_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.sepainstalment.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_sepainstalment_container_settings %}\n                            <div class="guarantee_conditions">\n                                <p class="guarantee_condtions_headings">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title\') }}</p>\n                                    <p>\n                                        <ul class="guarantee_condtions_list">\n                                            <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country\') }}</li>\n                                            <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b\') }}</li>\n                                            <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency\') }}</li>\n                                            <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentAmount\') }}</li>\n                                            <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentCycleAmount\') }}</li>\n                                            <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age\') }}</li>\n                                            <li>{{ $tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address\') }}</li>\n                                        </ul>\n                                    </p>\n                            </div>\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepainstalment %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepainstalmentTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentMinimumOrderAmount\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.sepainstalmentMinimumOrderAmount\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.sepainstalmentMinimumOrderAmount\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentLabel\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentTooltipText\')">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.sepainstalmentMinimumOrderAmount"\n                                                           :mapInheritance="props"\n                                                           :min="1998"\n                                                           :allowEmpty="false"\n                                                           numberType="integer"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentOneclick\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentOneclick\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepainstalmentOneclick"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentOnHold\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.sepainstalmentOnHold\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.sepainstalmentOnHold\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.sepainstalmentOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onholdOptions"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.sepainstalmentOnHoldAmount"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentProductPageInfo\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentProductPageInfo\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepainstalmentProductPageInfo"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.productPageInfo.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.productPageInfo.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentCycles\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.sepainstalmentCycles\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.sepainstalmentCycles\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-multi-select name="NovalnetPayment.settings.sepainstalmentCycles"\n                                                             labelProperty="name"\n                                                             valueProperty="id"\n                                                             :options="instalmentOptions"\n                                                             :isInherited="props.isInherited"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-multi-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentAllowB2B\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentAllowB2B\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.sepainstalmentAllowB2B"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.sepainstalmentNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.sepainstalmentNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.sepainstalmentNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_paypal %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_paypal_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.paypal.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_paypal_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_paypal %}\n                                    <div v-html="paypalInformation" class="novalnet_payment-settings-paypal-project">\n                                    </div>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.paypalTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.paypalTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.paypalTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <div class="novalnet_payment_paypal_condition">{{ $tc(\'novalnet-payment.settingForm.paymentSettings.paypal.condition\') }}</div>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.paypalOnHold\']"\n                                                        :has-parent="selectedSalesChannelId != null && getInheritValue(\'NovalnetPayment.settings.paypalOnHold\')"\n                                                        :inheritedValue="getInheritValue(\'NovalnetPayment.settings.paypalOnHold\')"\n                                                        :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.label\')"\n                                                        :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.tooltipText\')">\n                                        <template #content="props">\n                                            <sw-single-select name="NovalnetPayment.settings.paypalOnHold"\n                                                              labelProperty="name"\n                                                              valueProperty="id"\n                                                              :options="onholdOptions"\n                                                              :mapInheritance="props"\n                                                              :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                              :value="props.currentValue == null ? selected : props.currentValue"\n                                                              @update:value="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.paypalOnHoldAmount\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.paypalOnHoldAmount\']">\n                                        <template #content="props">\n                                            <sw-number-field name="NovalnetPayment.settings.paypalOnHoldAmount"\n                                                             numberType="int"\n                                                             :mapInheritance="props"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountLabel\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip\')"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :value="props.currentValue == 0 ? null : props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-number-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.paypalNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.paypalNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.paypalNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_postfinancecard %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_postfinancecard_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.postfinancecard.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_postfinancecard_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_postfinancecard %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.postfinancecardTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.postfinancecardTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.postfinancecardTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.postfinancecardNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.postfinancecardNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.postfinancecardNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_postfinance %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_postfinance_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.postfinance.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_postfinance_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_postfinance %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.postfinanceTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.postfinanceTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.postfinanceTestMode"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.postfinanceNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.postfinanceNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.postfinanceNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_bancontact %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_bancontact_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.bancontact.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_bancontact_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_bancontact %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.bancontactTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.bancontactTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.bancontactTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.bancontactNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.bancontactNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.bancontactNotify"\n                                                           :mapInheritance="props"  \n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')" \n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_multibanco %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_multibanco_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.multibanco.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_multibanco_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_multibanco %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.multibancoTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.multibancoTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.multibancoTestMode"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.multibancoNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.multibancoNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.multibancoNotify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n    \n    {% block novalnet_payment_content_card_channel_config_payment_alipay %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_alipay_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.alipay.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_alipay_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_alipay %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.alipayTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.alipayTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.alipayTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.alipayNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.alipayNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.alipayNotify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n    \n    {% block novalnet_payment_content_card_channel_config_payment_mbway %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_mbway_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.mbway.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_mbway_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_mbway %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.mbwayTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.mbwayTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.mbwayTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.mbwayNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.mbwayNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.mbwayNotify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n    \n    {% block novalnet_payment_content_card_channel_config_payment_payconiq %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_payconiq_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.payconiq.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_payconiq_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_payconiq %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.payconiqTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.payconiqTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.payconiqTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.payconiqNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.payconiqNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.payconiqNotify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_wechatpay %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_wechatpay_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.wechatpay.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_wechatpay_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_wechatpay %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.wechatpayTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.wechatpayTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.wechatpayTestMode"\n                                                             :mapInheritance="props"\n                                                             :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                             :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                             :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                             :value="props.currentValue"\n                                                             @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.wechatpayNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.wechatpayNotify\']">\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.wechatpayNotify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n\n    {% block novalnet_payment_content_card_channel_config_payment_trustly %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_trustly_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.trustly.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_trustly_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_trustly %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.trustlyTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.trustlyTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.trustlyTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.trustlyNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.trustlyNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.trustlyNotify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n    \n    {% block novalnet_payment_content_card_channel_config_payment_twint %}\n        <sw-card class="sw-card--grid novalnet-payment-configration-card">\n            {% block novalnet_payment_content_card_channel_config_payment_card_twint_container %}\n\n                \n                <sw-collapse>\n                    \n                    \n                    <template #header="{ expanded }">\n                        <div class="novalnet_payment_card_title">\n                            {{ $tc(\'novalnet-payment.settingForm.paymentSettings.twint.cardTitle\') }}\n                        </div>\n                        <div class="novalnet_payment_card_head_down_bar">\n                            <sw-icon name="regular-chevron-down" small="true">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    \n                    <template #content>\n                        {% block novalnet_payment_content_card_channel_config_payment_card_twint_container_settings %}\n                            <div v-if="actualConfigData" class="novalnet_payment-settings-credentials">\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_twint %}\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.twintTestMode\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.twintTestMode\']"\n                                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                        <template #content="props">\n                                            <sw-switch-field name="NovalnetPayment.settings.twintTestMode"\n                                                           :mapInheritance="props"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.testmode.tooltipText\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-switch-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                    <sw-inherit-wrapper v-model:value="actualConfigData[\'NovalnetPayment.settings.twintNotify\']"\n                                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'NovalnetPayment.settings.twintNotify\']"\n                                                        >\n                                        <template #content="props">\n                                            <sw-text-field name="NovalnetPayment.settings.twintNotify"\n                                                           :mapInheritance="props"\n                                                           :label="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.label\')"\n                                                           :helpText="$tc(\'novalnet-payment.settingForm.paymentSettings.notification.tooltipText\')"\n                                                           :disabled="props.isInherited || !acl.can(\'novalnet_payment.editor\')"\n                                                           :value="props.currentValue"\n                                                           @update:value="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n                </sw-collapse>\n            {% endblock %}\n        </sw-card>\n    {% endblock %}\n{% endblock %}\n',inject:["acl"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{required:!0}},data(){return{selected:"capture",paypalInformation:this.$tc("novalnet-payment.settingForm.paymentSettings.paypal.configureLink"),sellerNamePlaceHolder:window.location.host}},computed:{onholdOptions(){return[{id:"capture",name:this.$tc("novalnet-payment.settingForm.paymentSettings.onHold.capture")},{id:"authroize",name:this.$tc("novalnet-payment.settingForm.paymentSettings.onHold.authroize")}]},onHoldZeroOptions(){return[{id:"capture",name:this.$tc("novalnet-payment.settingForm.paymentSettings.onHold.capture")},{id:"authroize",name:this.$tc("novalnet-payment.settingForm.paymentSettings.onHold.authroize")},{id:"zero_amount",name:this.$tc("novalnet-payment.settingForm.paymentSettings.onHold.zeroAmountBooking")}]},onCaptureZeroOptions(){return[{id:"capture",name:this.$tc("novalnet-payment.settingForm.paymentSettings.onHold.capture")},{id:"zero_amount",name:this.$tc("novalnet-payment.settingForm.paymentSettings.onHold.zeroAmountBooking")}]},displayFieldOptions(){return[{id:"cart",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.displayFields.cartPage")},{id:"register",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.displayFields.registerPage")},{id:"ajaxCart",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.displayFields.miniCartPage")},{id:"productDetailPage",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.displayFields.productPage")},{id:"productListingPage",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.displayFields.productListingPage")}]},buttonThemeOptions(){return[{id:"black",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.dark")},{id:"white",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.light")},{id:"white-outline",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.outline")}]},buttonGpayThemeOptions(){return[{id:"default",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.default")},{id:"black",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.black")},{id:"white",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.white")}]},buttonTypeOptions(){return[{id:"plain",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.default")},{id:"buy",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.buy")},{id:"donate",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.donate")},{id:"book",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.book")},{id:"contribute",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.contribute")},{id:"check-out",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.checkout")},{id:"order",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.order")},{id:"pay",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.pay")},{id:"subscribe",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.subscribe")},{id:"tip",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.tip")},{id:"rent",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.rent")},{id:"reload",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.reload")},{id:"support",name:this.$tc("novalnet-payment.settingForm.paymentSettings.applepay.buttonType.support")}]},buttonGpayTypeOptions(){return[{id:"book",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.book")},{id:"buy",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.buy")},{id:"checkout",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.checkout")},{id:"donate",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.donate")},{id:"order",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.order")},{id:"pay",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.pay")},{id:"plain",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.plain")},{id:"subscribe",name:this.$tc("novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.subscribe")}]},instalmentOptions(){let e=[],n=this.$tc("novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.cycle");return["2","3","4","5","6","7","8","9","10","11","12","15","18","21","24","36"].forEach(function(t){e.push({id:t,name:t+n})}),e}},methods:{checkTextFieldInheritance(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance(e){return"boolean"!=typeof e},getInheritValue(e){return this.allConfigs.null[e]?this.allConfigs.null[e]:this.actualConfigData[e]}}}),t(100);let{Context:p,Component:c,Filter:d,Utils:m}=Shopware,{Criteria:u}=Shopware.Data,{currency:g}=Shopware.Utils.format;c.override("sw-order-detail-details",{template:'{% block sw_order_detail_details_payment %}\n	{% parent %}\n	{% block sw_order_detail_details_payment_novalnet_seaction %}\n		<template v-if="isNovalnetPayment">\n			<sw-order-details-state-card\n				v-if="transaction"\n				:title="$tc(\'novalnet-payment.module.title\')"\n				:order="order"\n				:entity="transaction"\n				:state-label="$tc(\'sw-order.stateCard.headlineTransactionState\')"\n				:disabled="!acl.can(\'order.editor\')"\n				@show-status-history="showStateHistoryModal = true"\n				@save-edits="onSaveEdits">\n				\n				<div class="novalnet-payment-buyer-notification">\n					{# Logo #}\n					{% block novalnet_payment_order_buyer_info %}\n						<div class="novalnet-payment-buyer-notification-icon-container" style="text-align:center;">\n							<img class="novalnet-payment-buyer-info-icon"\n								 :src="assetFilter(\'novalnetpayment/static/img/plugin.png\')">\n						</div>\n					{% endblock %}\n\n					{# Full name and E-Mail address #}\n					{% block novalnet_payment_order_buyer_info_name_container %}\n						<div class="novalnet-payment-buyer-info-name">\n\n							{% block novalnet_payment_order_buyer_info_name_container_name %}\n								<div class="novalnet-payment-buyer-info-full-name">\n									{{ order.orderCustomer.firstName }} {{ order.orderCustomer.lastName }}\n								</div>\n							{% endblock %}\n\n							{% block novalnet_payment_order_buyer_info_name_container_email %}\n								<div class="novalnet-payment-buyer-info-email">\n									{{ order.orderCustomer.email }}\n								</div>\n							{% endblock %}\n						</div>\n					{% endblock %}\n				</div>\n				\n				<sw-container class="novalnet-payment-amount-info" columns="1fr">\n					{% block novalnet_payment_order_component_amount_info %}\n						<div class="novalnet-payment-amount-info-total-amount" style="text-align:right;">\n							{{ displayAmount }}\n						</div>\n					{% endblock %}\n					\n					{% block novalnet_payment_amount_info_captured_amount %}\n						<div class="novalnet-payment-amount-captured-amount" style="text-align:right;">\n\n							{% block novalnet_payment_amount_info_captured_amount %}\n								+ {{ displayPaidAmount }}\n							{% endblock %}\n\n							{% block novalnet_payment_amount_info_captured_amount_help %}\n								<sw-help-text class="novalnet-payment-captured-amount-help-icon"\n											  tooltipPosition="top"\n											  :text="$tc(\'novalnet-payment.settingForm.extension.paidTooltip\')">\n								</sw-help-text>\n							{% endblock %}\n\n						</div>\n					{% endblock %}\n					\n					{% block novalnet_payment_order_compoenent_amount_info_refuned %}\n						<div class="novalnet-payment-refuned-amount" style="text-align:right;">\n\n							{% block novalnet_payment_order_compoenent_amount_info_refuned_amount %}\n								- {{ refundedAmount }}\n							{% endblock %}\n\n							{% block novalnet_payment_order_compoenent_amount_info_refuned_help %}\n								<sw-help-text class="novalnet-payment-refuned-amount-help-icon"\n											  tooltipPosition="top"\n											  :text="$tc(\'novalnet-payment.settingForm.extension.refundTooltip\')">\n								</sw-help-text>\n							{% endblock %}\n						</div>\n					{% endblock %}\n\n					{% block novalnet_payment_order_info_date %}\n						<div class="novalnet-payment-amount-info-charge-date" style="text-align:right;">\n							{{ dateFilter(transaction.createdAt, {day: \'2-digit\', month: \'2-digit\', year: \'numeric\'}) }}\n						</div>\n					{% endblock %}\n				</sw-container>\n				\n				<sw-container class="novalnet-payment-action-toolbar" rows="1" columns="1fr 1fr 1fr" gap="10px">\n\n					{% block novalnet_payment_order_container_toolbar_refund_button %}\n						<sw-button size="small"\n								class="novalnet-payment-pay-action-toolbar__button"\n								v-if="canRefund"\n								:disabled="!acl.can(\'novalnet_extension.editor\')"\n								@click="showRefundModal">\n							{{ $tc(\'novalnet-payment.settingForm.extension.refundButton\') }}\n						</sw-button>\n					{% endblock %}\n\n                    {% block novalnet_payment_order_container_toolbar_instalment_cancel_button %}\n                        <sw-button size="small"\n                                   class="novalnet-payment-pay-action-toolbar__button"\n                                   v-if="canInstalmentCancel"\n                                   :disabled="!acl.can(\'novalnet_extension.editor\')"\n                                   @click="showInstalmentCancelModal">\n                            {{ $tc(\'novalnet-payment.settingForm.extension.instalmentCancelLabel\') }}\n                        </sw-button>\n                    {% endblock %}\n               \n                    {% block novalnet_payment_order_container_toolbar_instalment_all_cancel_button %}\n                        <sw-button size="small"\n                                   class="novalnet-payment-pay-action-toolbar__button"\n                                   v-if="canInstalmentAllCancel"\n                                   :disabled="!acl.can(\'novalnet_extension.editor\')"\n                                   @click="showInstalmentAllCancelModal">\n                            {{ $tc(\'novalnet-payment.settingForm.extension.instalmentAllCancelLabel\') }}\n                        </sw-button>\n                    {% endblock %}\n                    \n                    {% block novalnet_payment_order_container_toolbar_instalment_remain_cancel_button %}\n                        <sw-button size="small"\n                                   class="novalnet-payment-pay-action-toolbar__button"\n                                   v-if="canInstalmentRemainCancel"\n                                   :disabled="!acl.can(\'novalnet_extension.editor\')"\n                                   @click="showInstalmentRemainCancelModal">\n                            {{ $tc(\'novalnet-payment.settingForm.extension.instalmentRemainCancelLabel\') }}\n                        </sw-button>\n                    {% endblock %}\n\n					{% block novalnet_payment_order_container_toolbar_capture_button %}\n						<sw-button size="small"\n								   class="novalnet-payment-pay-action-toolbar__button"\n								   v-if="canCaptureVoid"\n								   :disabled="!acl.can(\'novalnet_extension.editor\')"\n								   @click="showConfirmModal">\n							{{ $tc(\'novalnet-payment.settingForm.extension.confirmLabel\') }}\n						</sw-button>\n					{% endblock %}\n\n					{% block novalnet_payment_order_container_toolbar_cancel_button %}\n						<sw-button size="small"\n								   class="novalnet-payment-pay-action-toolbar__button"\n								   v-if="canCaptureVoid"\n								   :disabled="!acl.can(\'novalnet_extension.editor\')"\n								   @click="showCancelModal">\n							{{ $tc(\'novalnet-payment.settingForm.extension.cancelLabel\') }}\n						</sw-button>\n					{% endblock %}\n					\n					{% block novalnet_payment_order_container_toolbar_zero_amount_button %}\n						<sw-button size="small"\n								   class="novalnet-payment-pay-action-toolbar__button"\n								   v-if="canZeroAmountBooking"\n								   :disabled="!acl.can(\'novalnet_extension.editor\')"\n								   @click="showZeroAmountBlock">\n							{{ $tc(\'novalnet-payment.settingForm.extension.zeroAmountButton\') }}\n						</sw-button>\n					{% endblock %}\n				</sw-container>\n				\n				<sw-container class="novalnet-payment-pay-empty-container" columns="1fr">\n				</sw-container>\n				\n				<sw-container class="novalnet-payment-pay-info-container" columns="1fr">\n					<hr class="sw-order-detail-state-card__divider">\n					{% block novalnet_payment_order_component_checkout_info_billing_container %}\n						<div class="novalnet-payment_chechout-info-customer-comments" v-if="isNovalnetPayment">\n	\n							{% block novalnet_payment_order_component_checkout_info_billing_container_headline %}\n								<div class="novalnet-payment-checkout-info-header">\n									{{ $tc(\'novalnet-payment.module.comments\') }}\n								</div>\n							{% endblock %}\n	\n							{% block novalnet_payment_order_component_billing_value %}\n								<span class="novalnet-payment-checkout-info-comments" v-html="novalnetComments">\n								</span>\n							{% endblock %}\n	\n						</div>\n					{% endblock %}\n				</sw-container>\n				\n				{% block novalnet_payment_order_component_action_toolbar_modals %}\n					<novalnet-payment-refund-modal\n						v-if="refundModalVisible"\n						:refundableAmount="refundableAmount"\n						:order="order"\n						:item="item"\n						@modal-close="closeModals"\n						@reload-payment="reloadPaymentDetails">\n					</novalnet-payment-refund-modal>\n\n					<novalnet-payment-instalment-refund-modal\n						v-if="instalmentRefundModalVisible"\n						:item="item"\n						:cancelType="cancelType"\n						:order="order"\n						@modal-close="closeModals"\n						@reload-payment="reloadPaymentDetails">\n					</novalnet-payment-instalment-refund-modal>\n\n					<novalnet-payment-manage-transaction-modal\n						v-if="confirmModalVisible"\n						:status="status"\n						:order="order"\n						@modal-close="closeModals"\n						@reload-payment="reloadPaymentDetails">\n					</novalnet-payment-manage-transaction-modal>\n\n					<novalnet-payment-manage-transaction-modal\n						v-if="cancelModalVisible"\n						:status="status"\n						:order="order"\n						@modal-close="closeModals"\n						@reload-payment="reloadPaymentDetails">\n					</novalnet-payment-manage-transaction-modal>\n					\n					<novalnet-payment-book-amount-modal\n						v-if="zeroAmountVisible"\n						:orderAmount="orderAmount"\n						:order="order"\n						@modal-close="closeModals"\n						@reload-payment="reloadPaymentDetails">\n					</novalnet-payment-book-amount-modal>\n				{% endblock %}\n					\n			</sw-order-details-state-card>\n			\n			<sw-card :title="$tc(\'novalnet-payment.settingForm.instalmentInfo\')" v-if="canInstalmentShow">\n					<template #grid>\n						<sw-data-grid\n							:dataSource="InstalmentInfo"\n							:columns="getInstalmentColums"\n							:compactMode="false"\n							:allowInlineEdit="true"\n							:showSelection="false">\n\n							{% block sw_product_detail_base_ratings_actions %}\n								<template #actions="{ item }">\n									{% block sw_product_detail_base_ratings_actions_edit %}\n										<sw-context-menu-item\n											class="sw-product-detail-base__review-edit"\n											@click="instalmentRefund(item)"\n											:disabled="disableInstalmentRefund(item)">\n											{{ $tc(\'novalnet-payment.settingForm.extension.refundButton\') }}\n										</sw-context-menu-item>\n									{% endblock %}\n								</template>\n							{% endblock %}\n\n						</sw-data-grid>\n					</template>\n            </sw-card>\n		</template>\n		\n	{% endblock %}\n{% endblock %}\n',inject:["NovalPaymentApiCredentialsService","repositoryFactory","acl"],mixins:["notification"],props:{orderId:{type:String,required:!0},isSaveSuccessful:{type:Boolean,required:!0}},data(){return{status:0,displayAmount:0,displayPaidAmount:0,refundedAmount:0,InstalmentInfo:[],item:{},novalnetComments:"",isNovalnetPayment:!1,refundModalVisible:!1,confirmModalVisible:!1,zeroAmountVisible:!1,cancelModalVisible:!1,canInstalmentAllCancel:!1,canInstalmentRemainCancel:!1,instalmentRefundModalVisible:!1,canCaptureVoid:!1,canRefund:!1,canZeroAmountBooking:!1,canInstalmentCancel:!1,canInstalmentShow:!1,payLater:["novalnetinvoice","novalnetprepayment","novalnetcashpayment","novalnetmultibanco"],instalmentPayments:["novalnetinvoiceinstalment","novalnetsepainstalment"],onholdStatus:["91","99","98","85"]}},computed:{getInstalmentColums(){return[{property:"number",dataIndex:"number",label:this.$tc("novalnet-payment.settingForm.instalmentNumber"),width:"50px"},{property:"reference",dataIndex:"reference",label:this.$tc("novalnet-payment.settingForm.instalmentReference"),width:"120px"},{property:"amount",dataIndex:"amount",label:this.$tc("novalnet-payment.settingForm.instalmentAmount"),width:"80px"},{property:"totalAmount",dataIndex:"totalAmount",visible:!1},{property:"refundAmount",dataIndex:"refundAmount",visible:!1},{property:"nextCycle",dataIndex:"nextCycle",label:this.$tc("novalnet-payment.settingForm.instalmentDate"),width:"120px"},{property:"status",dataIndex:"status",label:this.$tc("novalnet-payment.settingForm.instalmentStatus"),width:"80px"}]},assetFilter(){return Shopware.Filter.getByName("asset")},dateFilter(){return Shopware.Filter.getByName("date")}},watch:{orderId:{deep:!0,handler(){if(!this.orderId){this.setNovalnetPayment(!1);return}let e=this.repositoryFactory.create("order"),n=new u(1,1);n.addAssociation("transactions"),n.addAssociation("transactions.stateMachineState"),n.addAssociation("currency"),n.addFilter(u.equals("id",this.orderId)),e.search(n,p.api).then(e=>{let n=e.first();if(!n)return;let t=!1,a="",l=this.$tc("novalnet-payment.module.comments");n.transactions.sort((e,n)=>new Date(n.createdAt)-new Date(e.createdAt)).forEach(e=>{if(e.customFields&&e.customFields.novalnet_comments)return null==this.stateMachineState&&null!=e.stateMachineState&&(this.stateMachineState=e.stateMachineState.name),t=!0,""!=a&&(a+="<dt>"+l+"</dt>"),a+=e.customFields.novalnet_comments.split("/ ").join("<br />"),!0}),t?(this.novalnetComments=a,this.setNovalnetPayment(!0),this.displayAmount=g(n.price.totalPrice,n.currency.shortName)):this.setNovalnetPayment(!1),this.canCaptureVoid=!1,this.canRefund=!1,this.canZeroAmountBooking=!1,this.canInstalmentCancel=!1,this.canInstalmentShow=!1,this.InstalmentInfo=[],this.NovalPaymentApiCredentialsService.getNovalnetAmount(n.orderNumber).then(e=>{if(null!=e.data&&void 0!=e.data){this.refundableAmount=Number(e.data.amount)-Number(e.data.refundedAmount),this.orderAmount=Math.round(100*Number(n.price.totalPrice)),this.displayAmount=0!=e.data.amount?g(e.data.amount/100,n.currency.shortName):this.displayAmount,this.displayPaidAmount=g(e.data.paidAmount/100,n.currency.shortName),this.refundedAmount=g(e.data.refundedAmount/100,n.currency.shortName);let a=JSON.parse(e.data.additionalDetails);if("ON_HOLD"==e.data.gatewayStatus||this.onholdStatus.includes(e.data.gatewayStatus)?this.canCaptureVoid=!0:!["novalnetinvoiceinstalment","novalnetsepainstalment","novalnetmultibanco"].includes(e.data.paymentType)&&("CONFIRMED"==e.data.gatewayStatus&&Number(e.data.refundedAmount)<Number(e.data.amount)||"PENDING"==e.data.gatewayStatus&&this.payLater.includes(e.data.paymentType))?this.canRefund=!0:this.instalmentPayments.includes(e.data.paymentType)&&"CONFIRMED"==e.data.gatewayStatus&&!a.cancelType?this.canInstalmentCancel=!0:("novalnetdirectdebitach"==e.data.paymentType||"novalnetcreditcard"==e.data.paymentType||"novalnetsepa"==e.data.paymentType||"novalnetgooglepay"==e.data.paymentType||"novalnetapplepay"==e.data.paymentType)&&0==Number(e.data.amount)&&0!=Number(n.price.totalPrice)&&(this.canZeroAmountBooking=!0),this.instalmentPayments.includes(e.data.paymentType)&&"CONFIRMED"==e.data.gatewayStatus&&void 0!=a.InstalmentDetails&&""!=a.InstalmentDetails){this.canInstalmentShow=!0;var t=1;Object.values(a.InstalmentDetails).forEach(e=>{this.InstalmentInfo.push({amount:g(e.amount/100,n.currency.shortName),totalAmount:e.amount,nextCycle:void 0!=a.InstalmentDetails[t+1]&&a.InstalmentDetails[t+1].cycleDate?a.InstalmentDetails[t+1].cycleDate:"",reference:e.reference,status:e.status,refundAmount:e.refundAmount,number:t}),t++})}}}).catch(e=>{this.createNotificationError({message:`${e.title}: ${e.message}`})})}).finally(()=>{this.setNovalnetPayment(!1)})},immediate:!0}},methods:{setNovalnetPayment(e){e&&(this.isNovalnetPayment=e)},showConfirmModal(){this.status=100,this.confirmModalVisible=!0},showRefundModal(){this.refundModalVisible=!0},closeModals(){this.refundModalVisible=!1,this.confirmModalVisible=!1,this.cancelModalVisible=!1,this.zeroAmountVisible=!1,this.instalmentRefundModalVisible=!1},showInstalmentAllCancelModal(){this.instalmentRefundModalVisible=!0,this.cancelType="CANCEL_ALL_CYCLES"},showInstalmentRemainCancelModal(){this.instalmentRefundModalVisible=!0,this.cancelType="CANCEL_REMAINING_CYCLES"},showCancelModal(){this.status=103,this.cancelModalVisible=!0},showZeroAmountBlock(){this.zeroAmountVisible=!0},reloadPaymentDetails(){this.closeModals(),this.$nextTick().then(()=>{this.$emit("reload-payment")})},instalmentRefund(e){this.refundableAmount=e.totalAmount-e.refundAmount,this.item=e,this.refundModalVisible=!0},showInstalmentCancelModal(){void 0!=this.InstalmentInfo&&null!=this.InstalmentInfo&&this.InstalmentInfo.forEach(e=>{(""==e.reference||null==e.reference)&&(this.canInstalmentRemainCancel=!0)}),this.canInstalmentAllCancel=!0,this.canInstalmentCancel=!1},disableInstalmentRefund(e){return void 0==e.reference||""==e.reference||e.refundAmount>=e.totalAmount||!this.acl.can("novalnet_extension.editor")}}});let{Component:y,Mixin:h}=Shopware,{currency:v}=Shopware.Utils.format;y.register("novalnet-payment-refund-modal",{template:'{% block novalnet_payment_order_refund_modal %}\n    <sw-modal :title="$tc(\'novalnet-payment.settingForm.extension.refundButton\')"\n              @modal-close="closeModal">\n		\n			{% block novalnet_payment_order_refund_modal_content %}\n				<template #default>\n\n					{% block novalnet_payment_order_refund_modal_content_info_text %}\n						<sw-container columns="1fr"\n									gap="0px 30px">\n							<sw-number-field v-model:value="refundAmount"\n										:min="0"\n										:allowEmpty="false"\n										numberType="int"\n										:label="$tc(\'novalnet-payment.settingForm.extension.amountTitle\')"\n										:helpText="$tc(\'novalnet-payment.settingForm.extension.refundDescription\')">\n							</sw-number-field>\n							<sw-text-field v-model:value="reason"\n									:placeholder="$tc(\'novalnet-payment.settingForm.extension.refundReference\')"\n									:label="$tc(\'novalnet-payment.settingForm.extension.refundReference\')">\n							</sw-text-field>\n						</sw-container>\n					{% endblock %}\n				</template>\n			{% endblock %}\n\n			{% block novalnet_payment_order_refund_modal_actions %}\n				<template #modal-footer>\n\n					{% block novalnet_payment_order_refund_modal_confirm %}\n						<sw-button secondary slim variant="primary" :disabled="disable" :square="false" :block="false" :isLoading="false" @click="novalnetRefund">\n							{{ $tc(\'novalnet-payment.settingForm.extension.refundButton\') }}\n						</sw-button>\n					{% endblock %}\n				</template>\n			{% endblock %}\n    </sw-modal>\n{% endblock %}\n',props:{refundableAmount:{type:Number,required:!0},order:{type:Object,required:!0},item:{type:Object,required:!0}},inject:["NovalPaymentApiCredentialsService","repositoryFactory"],mixins:[h.getByName("notification"),h.getByName("sw-inline-snippet")],data(){return{reason:"",disable:!1,refundAmount:this.refundableAmount}},methods:{closeModal(){this.$emit("modal-close")},novalnetRefund(){let e=this.refundAmount,n=this.reason,t=this.order.orderNumber;if("0"==e){this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.amountRefundError")});return}this.disable=!0,this.NovalPaymentApiCredentialsService.refundPayment(t,e,n,this.item.reference).then(e=>{void 0!=e.result&&null!=e.result&&""!=e.result?void 0!=e.result.status&&null!=e.result.status&&""!=e.result.status&&"SUCCESS"==e.result.status?this.createNotificationSuccess({message:this.$tc("novalnet-payment.settingForm.extension.refundSuccess")}):void 0!=e.result.status_text&&null!=e.result.status_text&&""!=e.result.status_text?this.createNotificationError({message:e.result.status_text}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.failureMessage")}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.failureMessage")}),this.$emit("modal-close"),setTimeout(this.$router.go,3e3)}).catch(e=>{this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1}),this.$emit("modal-close")})}}});let{Component:_,Mixin:f}=Shopware,{currency:b}=Shopware.Utils.format;_.register("novalnet-payment-book-amount-modal",{template:'{% block novalnet_payment_order_refund_modal %}\n    <sw-modal :title="$tc(\'novalnet-payment.settingForm.extension.zeroAmountButton\')"\n              @modal-close="closeModal">\n		\n			{% block novalnet_payment_order_zero_amount_modal_content %}\n				<template #default>\n\n					{% block novalnet_payment_order_zero_amount_modal_content_info_text %}\n						<sw-container columns="1fr"\n									gap="0px 30px">\n							<sw-number-field v-model:value="bookedAmount"\n										:min="0"\n										:allowEmpty="false"\n										numberType="int"\n										:label="$tc(\'novalnet-payment.settingForm.extension.zeroAmountTitle\')"\n										:helpText="$tc(\'novalnet-payment.settingForm.extension.zeroAmountDescription\')">\n							</sw-number-field>\n						</sw-container>\n					{% endblock %}\n				</template>\n			{% endblock %}\n\n			{% block novalnet_payment_order_zero_amount_modal_actions %}\n				<template #modal-footer>\n\n					{% block novalnet_payment_order_zero_amount_modal_confirm %}\n						<sw-button secondary slim variant="primary" :disabled="disable" :square="false" :block="false" :isLoading="false" @click="novalnetBookAmount">\n							{{ $tc(\'novalnet-payment.settingForm.extension.bookButton\') }}\n						</sw-button>\n					{% endblock %}\n				</template>\n			{% endblock %}\n    </sw-modal>\n{% endblock %}\n',props:{orderAmount:{type:Number,required:!0},order:{type:Object,required:!0}},inject:["NovalPaymentApiCredentialsService","repositoryFactory"],mixins:[f.getByName("notification"),f.getByName("sw-inline-snippet")],data(){return{reason:"",disable:!1,bookedAmount:this.orderAmount}},methods:{closeModal(){this.$emit("modal-close")},novalnetBookAmount(){let e=this.bookedAmount,n=this.order.id;if(0==e){this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.amountError")});return}this.disable=!0,this.NovalPaymentApiCredentialsService.BookOrderAmount(n,e).then(e=>{void 0!=e.result&&null!=e.result&&""!=e.result?void 0!=e.result.status&&null!=e.result.status&&""!=e.result.status&&"SUCCESS"==e.result.status?this.createNotificationSuccess({message:this.$tc("novalnet-payment.settingForm.extension.bookedSuccess")}):void 0!=e.result.status_text&&null!=e.result.status_text&&""!=e.result.status_text?this.createNotificationError({message:e.result.status_text}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.failureMessage")}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.failureMessage")}),this.$emit("modal-close"),setTimeout(this.$router.go,3e3)}).catch(e=>{this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1}),this.$emit("modal-close")})}}});let{Component:w,Mixin:C}=Shopware,{currency:k}=Shopware.Utils.format;w.register("novalnet-payment-instalment-refund-modal",{template:'{% block novalnet_payment_order_refund_modal %}\n    <sw-modal :title="$tc(\'novalnet-payment.settingForm.extension.instalmentCancelLabel\')"\n              @modal-close="closeModal">\n\n			{% block novalnet_payment_order_refund_modal_content %}\n				<template #default>\n\n					{% block novalnet_payment_order_refund_modal_content_info_text %}\n                        <sw-container columns="1fr"\n                                      gap="0px 30px">\n                            <div>\n                                {{ $tc(\'novalnet-payment.settingForm.extension.instalmentCancelMessage\') }}\n                            </div>\n                        </sw-container>\n					{% endblock %}\n				</template>\n			{% endblock %}\n\n			{% block novalnet_payment_order_refund_modal_actions %}\n				<template #modal-footer>\n\n					{% block novalnet_payment_order_refund_modal_confirm %}\n						<sw-button secondary slim variant="primary" :disabled="disable" :square="false" :block="false" :isLoading="false" @click="novalnetInstalmentCancel">\n							{{ $tc(\'novalnet-payment.settingForm.extension.confirmLabel\') }}\n						</sw-button>\n					{% endblock %}\n				</template>\n			{% endblock %}\n    </sw-modal>\n{% endblock %}\n',props:{cancelType:{type:Number,required:!0},order:{type:Object,required:!0}},inject:["NovalPaymentApiCredentialsService","repositoryFactory"],mixins:[C.getByName("notification"),C.getByName("sw-inline-snippet")],data(){return{reason:"",disable:!1}},methods:{closeModal(){this.$emit("modal-close")},novalnetInstalmentCancel(){let e=this.order.orderNumber,n=this.cancelType;this.disable=!0,this.NovalPaymentApiCredentialsService.instalmentCancel(e,n).then(e=>{void 0!=e.result&&null!=e.result&&""!=e.result?void 0!=e.result.status&&null!=e.result.status&&""!=e.result.status&&"SUCCESS"==e.result.status?this.createNotificationSuccess({message:this.$tc("novalnet-payment.settingForm.extension.instalmentSuccessMsg")}):void 0!=e.result.status_text&&null!=e.result.status_text&&""!=e.result.status_text?this.createNotificationError({message:e.result.status_text}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.failureMessage")}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.failureMessage")}),this.$emit("modal-close"),setTimeout(this.$router.go,3e3)}).catch(e=>{this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1}),this.$emit("modal-close")})}}});let{Component:I,Mixin:S}=Shopware,{currency:P}=Shopware.Utils.format;I.register("novalnet-payment-manage-transaction-modal",{template:'{% block novalnet_payment_order_manage_modal %}\n    <sw-modal :title="$tc(\'novalnet-payment.settingForm.extension.Managetitle\')"\n              @modal-close="closeModal">\n\n        {% block novalnet_payment_order_manage_modal_content %}\n            <template #default>\n\n                {% block novalnet_payment_order_manage_modal_content_info_text %}\n                    <sw-container columns="1fr"\n								gap="0px 30px">\n						<div v-if="status == 100">\n							{{ $tc(\'novalnet-payment.settingForm.extension.confirmMessage\') }}\n						</div>\n						<div v-if="status == 103">\n							{{ $tc(\'novalnet-payment.settingForm.extension.cancelMessage\') }}\n						</div>\n					</sw-container>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block novalnet_payment_order_manage_modal_actions %}\n            <template #modal-footer>\n\n                {% block novalnet_payment_order_manage_modal_confirm %}\n                    <sw-button secondary slim variant="primary" :disabled="disable" :square="false" :block="false" :isLoading="false" @click="novalnetOnhold">\n						{{ $tc(\'novalnet-payment.settingForm.extension.confirmLabel\') }}\n					</sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',props:{status:{type:Number,required:!0},order:{type:Object,required:!0}},inject:["NovalPaymentApiCredentialsService","repositoryFactory"],mixins:[S.getByName("notification"),S.getByName("sw-inline-snippet")],data(){return{confirm:!0,cancel:!1,disable:!1}},methods:{closeModal(){this.$emit("modal-close")},novalnetOnhold(){let e=this.status,n=this.order.orderNumber;if(""==e||void 0==e){this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.extension.onholdLabel")});return}this.disable=!0,this.NovalPaymentApiCredentialsService.managePayment(n,e).then(n=>{void 0!=n.result&&null!=n.result&&""!=n.result&&(void 0!=n.result.status&&null!=n.result.status&&""!=n.result.status&&"SUCCESS"==n.result.status?"100"==e?this.createNotificationSuccess({message:this.$tc("novalnet-payment.settingForm.extension.onholdSuccess")}):"103"==e&&this.createNotificationSuccess({message:this.$tc("novalnet-payment.settingForm.extension.onholdCancel")}):void 0!=n.result.status_text&&null!=n.result.status_text&&""!=n.result.status_text?this.createNotificationError({message:n.result.status_text}):this.createNotificationError({message:this.$tc("novalnet-payment.settingForm.failureMessage")})),this.$emit("modal-close"),setTimeout(this.$router.go,3e3)}).catch(e=>{this.createNotificationError({message:`${e.title}: ${e.message}`,autoClose:!1}),this.$emit("modal-close")})}}});let{Component:T,State:N,Mixin:F,Filter:x,Context:$,ContextSwitchParameters:V}=Shopware,D=Shopware.Data.Criteria,{currency:A}=Shopware.Utils.format;T.override("sw-order-create-details",{template:'  {% block sw_order_create_details_payment %}\n    <sw-card\n        class="sw-order-create-details__payment"\n        position-identifier="sw-order-create-details-payment"\n        :title="$tc(\'sw-order.createBase.detailsTab.labelTransactionCard\')"\n    >\n        <sw-container\n            class="sw_order_create-details__payment-container"\n            gap="0px 30px"\n            columns="1fr 1fr"\n        >\n            <sw-order-customer-address-select\n                v-model:value="context.billingAddressId"\n                :label="$tc(\'sw-order.createBase.labelBillingAddress\')"\n                :placeholder="$tc(\'sw-order.createBase.placeholderBillingAddress\')"\n                :same-address-value="context.shippingAddressId"\n                :customer="customer"\n            />\n\n            <sw-entity-single-select\n                v-model:value="context.paymentMethodId"\n                entity="payment_method"\n                label-property="distinguishableName"\n                class="sw_order_create-details__payment-method"\n                :criteria="paymentMethodCriteria"\n                :label="$tc(\'sw-order.createBase.labelPaymentMethod\')"\n                :placeholder="$tc(\'sw-order.createBase.placeholderPaymentMethod\')"\n                show-clearable-button\n                required\n            />\n\n            <sw-entity-single-select\n                v-model:value="context.currencyId"\n                class="sw_order_create-details__currency"\n                entity="currency"\n                :criteria="currencyCriteria"\n                :label="$tc(\'sw-order.createBase.labelCurrency\')"\n                :placeholder="$tc(\'sw-order.createBase.placeholderCurrency\')"\n                show-clearable-button\n                required\n            />\n        </sw-container>\n    </sw-card>\n    {% endblock %}\n',inject:["NovalPaymentApiCredentialsService","repositoryFactory","acl"],mixins:[F.getByName("notification")],data(){return{isLoading:!1}},computed:{salesChannelId(){return this.salesChannelContext?.salesChannel.id||""},salesChannelContext(){return N.get("swOrder").context},paymentMethodCriteria(){let e=new D;return e.addFilter(D.equals("active",1)),this.salesChannelId&&e.addFilter(D.equals("salesChannels.id",this.salesChannelId)),e.addFilter(D.multi("OR",[D.equals("customFields.novalnet_payment_method_name",null),D.equals("customFields.novalnet_payment_method_name","novalnetinvoice"),D.equals("customFields.novalnet_payment_method_name","novalnetprepayment"),D.equals("customFields.novalnet_payment_method_name","novalnetmultibanco"),D.equals("customFields.novalnet_payment_method_name","novalnetcashpayment")])),e}}});let{Component:B,State:M,Mixin:O,Filter:E,Context:z,ContextSwitchParameters:H}=Shopware,R=Shopware.Data.Criteria,{currency:L}=Shopware.Utils.format;B.override("sw-order-create-options",{inject:["NovalPaymentApiCredentialsService","repositoryFactory","acl"],mixins:[O.getByName("notification")],data(){return{isLoading:!1}},computed:{salesChannelId(){return M.get("swOrder").context?.salesChannel?.id??""},paymentMethodCriteria(){let e=new R;return e.addFilter(R.equals("active",1)),this.salesChannelId&&e.addFilter(R.equals("salesChannels.id",this.salesChannelId)),e.addFilter(R.multi("OR",[R.equals("customFields.novalnet_payment_method_name",null),R.equals("customFields.novalnet_payment_method_name","novalnetinvoice"),R.equals("customFields.novalnet_payment_method_name","novalnetprepayment"),R.equals("customFields.novalnet_payment_method_name","novalnetmultibanco"),R.equals("customFields.novalnet_payment_method_name","novalnetcashpayment")])),e}}});var U=JSON.parse('{"novalnet-payment":{"module":{"title":"Novalnet","description":"PCI-konforme und l\xfcckenlose Integration mit verschiedenen Zahlungsarten und Zahlungsdienstleistungen auf einer Plattform.","txid":"Novalnet Transaktions-ID","comments":"Kommentare","projectInfo":"Ihr Projekt befindet sich im Testmodus","generalInfo":"Bevor Sie beginnen, lesen Sie bitte die Installationsanleitung und melden Sie sich mit Ihrem H\xe4ndlerkonto im <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin-Portal </a> an. Um ein H\xe4ndlerkonto zu erhalten, senden Sie bitte eine E-Mail an <a href=\'mailto:sales{\'@\'}novalnet.de\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> sales{\'@\'}novalnet.de </a> oder rufen Sie uns unter +49 89 923068320 an.","globalTitle":"Konfigurationseinstellungen","paymentTitle":"Zahlungseinstellungen","installationInfo":"F\xfcr die Einrichtung und Verwendung des Plugins finden Sie die Installationsanleitung <a href=\'https://www.novalnet.com/docs/plugins/installation-guides/shopware-6-installation-guide.pdf\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'>Here</a>"},"settingForm":{"title":"Novalnet","statusTitle":"Zustand","billingAddressHeadline":"Rechnungsadresse","shippingAddressHeadline":"Versandadresse","buttons":{"save":"Speichern"},"credentials":{"cardTitle":"Novalnet API-Konfiguration","activationKey":{"label":"Aktivierungsschl\xfcssel des Produkts *","tooltipText":"Ihr Produktaktivierungsschl\xfcssel ist ein eindeutiger Token f\xfcr die H\xe4ndlerauthentifizierung und Zahlungsabwicklung.Ihr Produktaktivierungsschl\xfcssel ist ein eindeutiges Token f\xfcr die H\xe4ndlerauthentifizierung und Zahlungsabwicklung. Ihren Produktaktivierungsschl\xfcssel finden Sie im <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin-Portal </a>: Projekts > W\xe4hlen Sie Ihr Projekt > API-Anmeldeinformationen > API-Signatur (Produktaktivierungsschl\xfcssel)"},"accessKey":{"label":"Zahlungs-Zugriffsschl\xfcssel *","tooltipText":"Ihr geheimer Schl\xfcssel zur Verschl\xfcsselung der Daten, um Manipulation und Betrug zu vermeiden. Ihren Paymentzugriffsschl\xfcssel finden Sie im <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin-Portal </a>: Projekts > W\xe4hlen Sie Ihr Projekt > API-Anmeldeinformationen > Paymentzugriffsschl\xfcssel"},"tariff":{"label":"Auswahl der Tarif-ID *","tooltipText":"W\xe4hlen Sie eine Tarif-ID, die dem bevorzugten Tarifplan entspricht, den Sie im Novalnet Admin-Portal f\xfcr dieses Projekt erstellt haben","emptyText":"Tarif-ID ausw\xe4hlen"},"orderEmailMode":{"label":" Bestellbest\xe4tigung per E-Mail aktivieren","tooltipText":"Aktivieren Sie diesen Reiter, um eine weitere Bestellbest\xe4tigungs-E-Mail mit Novalnet-Transaktionsdetails an den Endkunden f\xfcr Bestellungen zu senden, die \xfcber Rechnung, Rechnung mit Zahlungsgarantie,Lastschrift SEPA mit Zahlungsgarantie, Ratenzahlung per Rechnung,Ratenzahlung per SEPA-Lastschrift, Vorkasse, Barzahlen oder Multibanco get\xe4tigt wurden. (Standardm\xe4\xdfig wird die erste Bestellbest\xe4tigungs-E-Mail an Endkunden ohne Novalnet-Transaktionsdetails gesendet.)"}},"merchantSettings":{"cardTitle":"Benachrichtigungs- / Webhook-URL festlegen","deactivateIp":{"label":"Manuelles Testen der Benachrichtigungs / Webhook-URL erlauben","tooltipText":"Aktivieren Sie diese Option, um die Novalnet-Benachrichtigungs-/Webhook-URL manuell zu testen. Deaktivieren Sie die Option, bevor Sie Ihren Shop liveschalten, um unautorisierte Zugriffe von Dritten zu blockieren."},"mailTo":{"label":"E-Mails senden an","tooltipText":"E-Mail-Benachrichtigungen werden an diese E-Mail-Adresse gesendet"},"callbackUrl":{"label":"Benachrichtigungs- / Webhook-URL","button":"Konfigurieren","tooltipText":"Sie m\xfcssen die folgende Webhook-URL im <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'>Novalnet Admin-Portal</a> hinzuf\xfcgen. Dadurch k\xf6nnen Sie Benachrichtigungen \xfcber den Transaktionsstatus erhalten."}},"paymentSettings":{"testmode":{"label":"Testmodus aktivieren","tooltipText":"Die Zahlung wird im Testmodus durchgef\xfchrt, daher wird der Betrag f\xfcr diese Transaktion nicht eingezogen."},"oneclick":{"label":"Kauf mit einem Klick","tooltipText":"Zahlungsdaten, die w\xe4hrend des Bestellvorgangs gespeichert werden, k\xf6nnen f\xfcr zuk\xfcnftige Zahlungen verwendet werden"},"notification":{"label":"Benachrichtigung des K\xe4ufers","tooltipText":"Der eingegebene Text wird auf der Checkout-Seite angezeigt"},"onHold":{"label":"Aktion f\xfcr vom Besteller autorisierte Zahlungen","tooltipText":"W\xe4hlen Sie, ob die Zahlung sofort belastet werden soll oder nicht. Zahlung einziehen: Betrag sofort belasten. Zahlung autorisieren: Die Zahlung wird \xfcberpr\xfcft und autorisiert, aber erst zu einem sp\xe4teren Zeitpunkt belastet. So haben Sie Zeit, \xfcber die Bestellung zu entscheiden.","capture":"Zahlung einziehen","authroize":"Zahlung autorisieren","zeroAmountBooking":"Mit Nullbetrag autorisieren","amountLabel":"Mindesttransaktionsbetrag f\xfcr die Autorisierung (in der kleinsten W\xe4hrungseinheit, z.B. 100 Cent = entsprechen 1.00 EUR)","amountTooltip":"\xdcbersteigt der Bestellbetrag das genannte Limit, wird die Transaktion, bis zu ihrer Best\xe4tigung durch Sie, auf on hold gesetzt. Sie k\xf6nnen das Feld leer lassen, wenn Sie m\xf6chten, dass alle Transaktionen als on hold behandelt werden."},"guaranteeMinimumOrderAmount":{"label":"Mindestbestellbetrag f\xfcr Zahlungsgarantie (in der kleinsten W\xe4hrungseinheit, z.B. 100 Cent = entsprechen 1.00 EUR)","instalmentLabel":"Mindestbestellbetrag (in der kleinsten W\xe4hrungseinheit, z.B. 100 Cent = entsprechen 1.00 EUR)","instalmentTooltipText":"Mindestbestellsumme zur Anzeige der ausgew\xe4hlten Zahlungsart(en) im Checkout","tooltipText":"Geben Sie den Mindestbetrag (in Cent) f\xfcr die zu bearbeitende Transaktion mit Zahlungsgarantie ein. Geben Sie z.B. 100 ein, was 1,00 entspricht. Der Standbetrag ist 9,99 EUR."},"forceGuarantee":{"label":"Zahlung ohne Zahlungsgarantie erzwingen","tooltipText":"Falls die Zahlungsgarantie zwar aktiviert ist, jedoch die Voraussetzungen f\xfcr Zahlungsgarantie nicht erf\xfcllt sind, wird die Zahlung ohne Zahlungsgarantie verarbeitet.","sepacondition":"Stellen Sie sicher, dass Sie die Zahlungsart SEPA-Lastschrift aktiviert haben, um diese Option nutzen zu k\xf6nnen.","invoicecondition":"Stellen Sie sicher, dass Sie die Zahlungsart Rechnung aktiviert haben, um diese Option nutzen zu k\xf6nnen."},"allowB2B":{"label":"B2B-Kunden erlauben","tooltipText":"B2B-Kunden erlauben, Bestellungen aufzugeben"},"productPageInfo":{"label":"Ratenzahlungsplan auf der Produktdetailseite anzeigen","tooltipText":"Legen Sie fest, ob ein Ratenzahlungsplan auf der Produktseite angezeigt werden soll oder nicht."},"instalmentCycleInfo":{"label":"Anzahl der Raten","tooltipText":"W\xe4hlen Sie die zeitliche Abfolge der Raten f\xfcr den Ratenzahlungsplan","cycle":" Raten"},"creditcard":{"cardTitle":"Kredit- / Debitkarte","cc3D":{"label":"3D-Secure aktivieren","tooltipText":"3D-Secure wird f\xfcr Kreditkarten aktiviert. Die kartenausgebende Bank fragt vom K\xe4ufer ein Passwort ab, welches helfen soll, betr\xfcgerische Zahlungen zu verhindern. Dies kann von der kartenausgebenden Bank als Beweis verwendet werden, dass der K\xe4ufer tats\xe4chlich der Inhaber der Kreditkarte ist. Damit soll das Risiko von Chargebacks verringert werden."},"inline":{"label":"Inline-Formular erm\xf6glichen","tooltipText":"Inline-Formular: Die folgenden Felder werden im Checkout in zwei Zeilen angezeigt: Karteninhaber & Kreditkartennummer / Ablaufdatum / CVC"},"enforcecc3D":{"label":"3D-Secure-Zahlungen au\xdferhalb der EU erzwingen","tooltipText":"Wenn Sie diese Option aktivieren, werden alle Zahlungen mit Karten, die au\xdferhalb der EU ausgegeben wurden, mit der starken Kundenauthentifizierung (Strong Customer Authentication, SCA) von 3D-Secure 2.0 authentifiziert."},"css":{"cardTitle":"CSS-Einstellungen f\xfcr den iFrameformular","label":"Beschriftung","input":"Eingabe","css":"Text f\xfcr das CSS"}},"sepa":{"cardTitle":"SEPA-Lastschrift","dueDate":{"label":"F\xe4lligkeitsdatum (in Tagen)","tooltipText":"Geben Sie die Anzahl der Tage ein, nach denen der Zahlungsbetrag eingezogen werden soll (muss zwischen 3 und 14 Tagen liegen).","error":"SEPA F\xe4lligkeitsdatum Ung\xfcltiger"}},"directdebitach":{"cardTitle":"Lastschrift ACH"},"sepaguarantee":{"cardTitle":"SEPA-Lastschrift mit Zahlungsgarantie"},"applepay":{"cardTitle":"Apple Pay","buttonTitle":"Design der Apple Pay-Taste","buttonTypeLabel":"Button-Typ","buttonType":{"default":"Standard","buy":"Kaufen","donate":"Spenden","book":"Buchen","contribute":"Beitragen","checkout":"Bezahlen","order":"Bestellen","pay":"Bezahlen","subscribe":"Abonnieren","tip":"Trinkgeld","rent":"Mieten","reload":"Aufladen","support":"Unterst\xfctzen"},"buttonTheme":{"label":"Button-Farbe","dark":"Dunkel","light":"Hell","outline":"An Hintergrund anpassen"},"sellerName":{"label":"Name des Gesch\xe4fts","tooltipText":"Der Name des Gesch\xe4fts wird in den Zahlungsbeleg von Apple Pay eingef\xfcgt und der Text wird als PAY \'Name des Gesch\xe4fts\' angezeigt, so dass der Endkunde wei\xdf, an wen er zahlt. "},"buttonHeight":{"label":"Button-H\xf6he","tooltipText":"zwischen 30 und 64 Pixel"},"buttonRadius":{"label":"Abrundungsgrad der Ecken des Buttons","tooltipText":"zwischen 0 und 10 Pixel"},"displayFields":{"label":"Apple Pay-Button anzeigen auf","tooltipText":"Auf den ausgew\xe4hlten Seiten wird der Apple Pay-Button angezeigt um mit der Express-Checkout-Option sofort zu bezahlen.","emptyText":"Ausgew\xe4hlte Seiten, die den Apple Pay Button anzeigen","cartPage":"Einkaufswagen Seite","registerPage":"Seite registrieren","miniCartPage":"Mini-Wagen-Seite","productPage":"Produkt-Detailseite","productListingPage":"Produktauflistung Seite"}},"googlepay":{"cardTitle":"Google Pay","buttonTitle":"Google Pay-Schaltfl\xe4che Design","buttonTypeLabel":"Button-Typ","buttonType":{"book":"Buchen","buy":"Kaufen","checkout":"Bezahlen","donate":"Spenden","order":"Bestellen","pay":"Bezahlen","plain":"Einfach","subscribe":"Abonnieren"},"buttonTheme":{"label":"Button-Farbe","default":"Standard","black":"Schwarz","white":"Wei\xdf"},"sellerName":{"label":"Name des Gesch\xe4fts","tooltipText":"Der Name des Gesch\xe4fts wird in den Zahlungsbeleg von Google Pay eingef\xfcgt und der Text wird als PAY \'Name des Gesch\xe4fts\' angezeigt, so dass der Endkunde wei\xdf, an wen er zahlt. "},"merchantId":{"label":"Google-H\xe4ndler-ID","tooltipText":"Beachten Sie bitte, dass die H\xe4ndler-ID von Google f\xfcr die Ausf\xfchrung dieser Zahlungsart in der Live-Umgebung ben\xf6tigt wird. Die H\xe4ndler-ID wird nach der Registrierung bei <a href=\'https://pay.google.com/business/console/\'>Google Pay und der Wallet-Konsole</a> vergeben. Siehe auch: <a href=\'https://developers.google.com/pay/api/web/guides/test-and-deploy/request-prod-access\'>Anfrage f\xfcr Produktiv-Zugang stellen</a>, falls Sie mehr Informationen zum Genehmigungsverfahren ben\xf6tigen und dazu, wie Sie eine Google H\xe4ndler-ID erhalten. Die Registrierung beinhaltet auch, dass Sie Ihre Anbindung mit ausreichenden Screenshots einreichen, deshalb sammeln Sie diese Informationen, indem Sie die Zahlungsmethode im Testmodus aktivieren. Um die Validierung dieses Feldes zu \xfcberspringen, w\xe4hrend Sie die Konfiguration speichern, verwenden Sie diese Test-ID, BCR2DN4XXXTN7FSI , zum Testen und Einreichen Ihrer Anbindung bei Google."},"buttonHeight":{"label":"Button-H\xf6he","tooltipText":"zwischen 40 und 100 Pixel"},"displayFields":{"label":"Google Pay-Button anzeigen auf","tooltipText":"Auf den ausgew\xe4hlten Seiten wird der Google Pay-Button angezeigt um mit der Express-Checkout-Option sofort zu bezahlen.","emptyText":"Ausgew\xe4hlte Seiten, die den Google Pay Button anzeigen","cartPage":"Einkaufswagen Seite","registerPage":"Seite registrieren","miniCartPage":"Mini-Wagen-Seite","productPage":"Produkt-Detailseite","productListingPage":"Produktauflistung Seite"}},"paypal":{"cardTitle":"PayPal","condition":"Um diese Option zu verwenden, m\xfcssen Sie die Option Billing Agreement (Zahlungsvereinbarung) in Ihrem PayPal-Konto aktiviert haben. Kontaktieren Sie dazu bitte Ihren Kundenbetreuer bei PayPal.","configureLink":"Um PayPal-Transaktionen zu akzeptieren, konfigurieren Sie Ihre PayPal-API-Informationen im <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin-Portal </a> > Projekts > W\xe4hlen Sie Ihr Projekt > Zahlungsmethoden > Paypal > Konfigurieren"},"sofort":{"cardTitle":"Sofort\xfcberweisung"},"blik":{"cardTitle":"Blik"},"onlinebanktransfer":{"cardTitle":"Online\xfcberweisung"},"ideal":{"cardTitle":"iDEAL"},"eps":{"cardTitle":"eps"},"giropay":{"cardTitle":"giropay"},"cashpayment":{"cardTitle":"Barzahlen/viacash","dueDate":{"label":"Verfallsdatum des Zahlscheins (in Tagen)","tooltipText":"Anzahl der Tage, die der K\xe4ufer Zeit hat, um den Betrag in einer Filiale zu bezahlen. Wenn Sie dieses Feld leer lassen, ist der Zahlschein standardm\xe4\xdfig 14 Tage lang g\xfcltig."}},"invoice":{"cardTitle":"Kauf auf Rechnung","dueDate":{"label":"F\xe4lligkeitsdatum (in Tagen)","tooltipText":"Anzahl der Tage, die der K\xe4ufer Zeit hat, um den Betrag an Novalnet zu \xfcberweisen (muss mehr als 7 Tage betragen). Wenn Sie dieses Feld leer lassen, werden standardm\xe4\xdfig 14 Tage als F\xe4lligkeitsdatum festgelegt."}},"invoiceguarantee":{"cardTitle":"Rechnung mit Zahlungsgarantie","dueDate":{"label":"F\xe4lligkeitsdatum (in Tagen)","tooltipText":"Anzahl der Tage, die der K\xe4ufer Zeit hat, um den Betrag an Novalnet zu \xfcberweisen (muss mehr als 7 Tage betragen). Wenn Sie dieses Feld leer lassen, werden standardm\xe4\xdfig 14 Tage als F\xe4lligkeitsdatum festgelegt."}},"prepayment":{"cardTitle":"Vorkasse","dueDate":{"label":"F\xe4lligkeitsdatum (in Tagen)","tooltipText":"Anzahl der Tage, die der K\xe4ufer Zeit hat, um den Betrag an Novalnet zu \xfcberweisen (muss zwischen 7 und 28 Tagen liegen). Wenn Sie dieses Feld leer lassen, werden standardm\xe4\xdfig 14 Tage als F\xe4lligkeitsdatum festgelegt"}},"bancontact":{"cardTitle":"Bancontact"},"postfinance":{"cardTitle":"PostFinance E-Finance"},"postfinancecard":{"cardTitle":"PostFinance Card"},"multibanco":{"cardTitle":"Multibanco"},"alipay":{"cardTitle":"AliPay"},"mbway":{"cardTitle":"MB Way"},"wechatpay":{"cardTitle":"WeChatPay"},"trustly":{"cardTitle":"Trustly"},"payconiq":{"cardTitle":"Payconiq"},"twint":{"cardTitle":"TWINT"},"invoiceinstalment":{"cardTitle":"Ratenzahlung per Rechnung"},"sepainstalment":{"cardTitle":"Ratenzahlung per SEPA-Lastschrift"},"przelewy24":{"cardTitle":"Przelewy24"},"guaranteeCondition":{"title":"Grundanforderungen:","country":"Erlaubte B2C-L\xe4nder: Deutschland, \xd6sterreich, Schweiz","b2b":"Erlaubte B2B-L\xe4nder: Europ\xe4ische Union und Schweiz","currency":"Zugelassene W\xe4hrung: €","amount":"Mindestbetrag der Bestellung: 9,99 €","instalmentAmount":"Mindestbetrag der Bestellung: 19,98 €","instalmentCycleAmount":"Bitte beachten Sie, dass der Betrag einer Rate mindestens 9.99 EUR betragen muss und Raten, die diese Kriterien nicht erf\xfcllen, nicht im Ratenplan angezeigt werden","age":"Mindestalter: 18 Jahre","address":"Rechnungsadresse und Lieferadresse m\xfcssen \xfcbereinstimmen"}},"extension":{"Managetitle":"Transaktion verwalten","refundTitle":"Ablauf der R\xfcckerstattung","refundButton":"R\xfcckerstattung","amountTitle":"R\xfcckerstattungsbetrag","zeroAmountButton":"Buchbetrag","bookButton":"Buchen Sie","zeroAmountTitle":"Gebuchter Auftrag f\xfcr diesen Betrag","onholdTitle":"Erfassen / ung\xfcltig","emptyMessage":"--Ausw\xe4hlen--","onholdLabel":"W\xe4hlen Sie bitte einen Status aus","confirmLabel":"Best\xe4tigen","cancelLabel":"Stornieren","instalmentCancelLabel":"Ratenzahlung Stornieren","instalmentAllCancelLabel":"Gesamte Ratenzahlung stornieren","instalmentRemainCancelLabel":"Alle \xfcbrigen Installationen abbrechen","paidTooltip":"Gezahlter Gesamtbetrag","refundTooltip":"R\xfcckerstatteter Betrag","confirmMessage":"Sind Sie sicher, dass Sie die Zahlung einziehen m\xf6chten?","cancelMessage":"Sind Sie sicher, dass Sie die Zahlung stornieren wollen?","instalmentCancelMessage":"Sind Sie sicher, dass Sie die Ratenzahlung stornieren m\xf6chten?","amountUpdateTitle":"Betrag \xe4ndern","refundDescription":"Geben Sie bitte den erstatteten Betrag ein (in der kleinsten W\xe4hrungseinheit, z.B. 100 Cent = entsprechen 1.00 EUR)","zeroAmountDescription":"Bitte geben Sie den Betrag ein (in der kleinsten W\xe4hrungseinheit, z.B. 100, was 1,00 entspricht)","refundReference":"Grund der R\xfcckerstattung/Stornierung","refundSuccess":"Die R\xfcckerstattung war erfolgreich.","bookedSuccess":"Ihr gebuchter Betrag war erfolgreich.","updateSuccess":"Ihr Update war erfolgreich.","instalmentSuccessMsg":"Die Ratenzahlung wurde erfolgreich abgebrochen.","onholdSuccess":"Die Transaktion wurde best\xe4tigt","onholdCancel":"Die Transaktion wurde storniert"},"titleSuccess":"Success","titleError":"Error","amountError":"Ung\xfcltiger Betrag","amountRefundError":"Ung\xfcltiger R\xfcckerstattungsbetrag","failureMessage":"Bitte f\xfcllen Sie die erforderlichen Felder aus","apiFailureMessage":"Konfigurieren Sie bitte die zentralen Novalnet-Einstellungen","successMessage":"Die Novalnet-H\xe4ndlerdaten wurden erfolgreich eingestellt.","errorMessage":"Ein Fehler trat auf und Ihre Zahlung konnte nicht abgeschlossen werden.","emptyMessage":"Aktivierungsschl\xfcssel f\xfcr das Produkt eingeben","emptyAccessKeyMessage":"Zahlungs-Zugangsschl\xfcssel eingeben","webhookUrlConfirm":"Sind Sie sicher, dass Sie die Webhook-URL im Novalnet Admin Portal konfigurieren m\xf6chten?","webhookUrlSuccess":"Callbackskript-/ Webhook-URL wurde erfolgreich im Novalnet Admin Portal konfiguriert","webhookUrlFailure":"Bitte geben Sie eine g\xfcltige Webhook-URL ein","instalmentNumber":"S.No","instalmentReference":"Novalnet-Transaktions-ID","instalmentDate":"N\xe4chste Rate f\xe4llig am","instalmentAmount":"Betrag","instalmentStatus":"Status","instalmentInfo":"Zusammenfassung der Ratenzahlung"}},"sw-privileges":{"permissions":{"novalnet_extension":{"label":"Novalnet-Erweiterungen"},"parents":{"novalnet_payment":"Novalnet"},"novalnet_payment":{"label":"Novalnet Einstellungen"}}}}'),q=JSON.parse('{"novalnet-payment":{"module":{"title":"Novalnet","description":"PCI compliant and seamless integration with various payment types and payment processing services in one unique platform...","txid":"Novalnet Transaction ID","comments":"Comments","projectInfo":"Your project is in test mode","generalInfo":"Please read the Installation Guide before you start and login to the <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin Portal </a> using your merchant account. To get a merchant account, mail to <a href=\'mailto:sales{\'@\'}novalnet.de\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> sales{\'@\'}novalnet.de</a> or call +49 (089) 923068320.","globalTitle":"Global Configuration","paymentTitle":"Payment Configuration","installationInfo":"For setup and handling of the Novalnet-Payment plugin you can find the installation guide <a href=\'https://www.novalnet.com/docs/plugins/installation-guides/shopware-6-installation-guide.pdf\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'>Here</a>"},"settingForm":{"title":"Novalnet","statusTitle":"Status","billingAddressHeadline":"Billing address","shippingAddressHeadline":"Shpping address","buttons":{"save":"Save"},"credentials":{"cardTitle":"Novalnet API Configuration","activationKey":{"label":"Product activation key *","tooltipText":"Your product activation key is a unique token for merchant authentication and payment processing. Get your Product activation key from the <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin Portal </a>: Projects > Choose your project > API credentials > API Signature (Product activation key)"},"accessKey":{"label":"Payment access key *","tooltipText":"Your secret key used to encrypt the data to avoid user manipulation and fraud. Get your Payment access key from the <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin Portal </a> Projects > Choose your project > API credentials > Payment access key"},"tariff":{"label":"Select Tariff ID *","tooltipText":"Select a Tariff ID to match the preferred tariff plan you created at the Novalnet Admin Portal for this project","emptyText":"Select Tariff ID"},"orderEmailMode":{"label":"Enable Order Confirmation E-mail","tooltipText":"Enable this configuration to send another Order Confirmation e-mail with Novalnet transaction details to the end customer for orders made through Invoice, Invoice with payment guarantee, Direct debit SEPA with payment guarantee, Instalment by invoice, Instalment by SEPA direct debit, Prepayment, Cashpayment, and Multibanco payments. (By default initial Order confirmation e-mail will send to end customers without Novalnet transaction details)"}},"merchantSettings":{"cardTitle":"Notification / Webhook URL Setup","deactivateIp":{"label":"Allow manual testing of the Notification / Webhook URL","tooltipText":"Enable this to test the Novalnet Notification / Webhook URL manually. Disable this before setting your shop live to block unauthorized calls from external parties"},"mailTo":{"label":"Send e-mail to","tooltipText":"Notification / Webhook URL execution messages will be sent to this e-mail"},"callbackUrl":{"label":"Notification / Webhook URL","button":"Configure","tooltipText":"You must configure the webhook endpoint in your <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'>Novalnet Admin portal</a>. This will allow you to receive notifications about the transaction."}},"paymentSettings":{"testmode":{"label":"Enable test mode","tooltipText":"The payment will be processed in the test mode therefore amount for this transaction will not be charged"},"oneclick":{"label":"One-click shopping","tooltipText":"Payment details stored during the checkout process can be used for future payments"},"notification":{"label":"Notification for the buyer","tooltipText":"The entered text will be displayed on the checkout page"},"onHold":{"label":"Payment Action","tooltipText":"Choose whether or not the payment should be charged immediately. Capture completes the transaction by transferring the funds from buyer account to merchant account. Authorize verifies payment details and reserves funds to capture it later, giving time for the merchant to decide on the order","capture":"Capture","authroize":"Authorize","zeroAmountBooking":"Authorize with zero amount","amountLabel":"Minimum transaction amount for authorization (in minimum unit of currency. E.g. enter 100 which is equal to 1.00)","amountTooltip":"In case the order amount exceeds the mentioned limit, the transaction will be set on-hold till your confirmation of the transaction. You can leave the field empty if you wish to process all the transactions as on-hold."},"guaranteeMinimumOrderAmount":{"label":"Minimum order amount for payment guarantee (in minimum unit of currency. E.g. enter 100 which is equal to 1.00)","instalmentLabel":"Minimum order amount (in minimum unit of currency. E.g. enter 100 which is equal to 1.00)","instalmentTooltipText":"Minimum order amount to display the selected payment method (s) at during checkout","tooltipText":"Enter the minimum amount (in cents) for the transaction to be processed with payment guarantee. For example, enter 100 which is equal to 1,00. By default, the amount will be 9,99 EUR"},"forceGuarantee":{"label":"Force Non-Guarantee payment","tooltipText":"Even if payment guarantee is enabled, payments will still be processed as non-guarantee payments if the payment guarantee requirements are not met","sepacondition":"Make sure the Direct Debit SEPA payment is enabled to use this option.","invoicecondition":"Make sure the Invoice payment is enabled to use this option."},"allowB2B":{"label":"Allow B2B Customers","tooltipText":"Allow B2B customers to place order"},"productPageInfo":{"label":"Display Instalment Plan on Product Detail Page","tooltipText":"Control whether or not an instalment plan should be displayed in the product page."},"instalmentCycleInfo":{"label":"Instalment cycles","tooltipText":"Select the instalment cycles that can be availed in the instalment plan","cycle":" cycles"},"creditcard":{"cardTitle":"Credit/Debit Cards","cc3D":{"label":"Enable 3D secure","tooltipText":"The 3D-Secure will be activated for credit cards. The issuing bank prompts the buyer for a password what, in turn, help to prevent a fraudulent payment. It can be used by the issuing bank as evidence that the buyer is indeed their card holder. This is intended to help decrease a risk of charge-back"},"inline":{"label":"Enable inline form","tooltipText":"Inline form: The following fields will be shown in the checkout in two lines: card holder & credit card number / expiry date / CVC"},"enforcecc3D":{"label":"Enforce 3D secure payment outside EU","tooltipText":"By enabling this option, all payments from cards issued outside the EU will be authenticated via 3DS 2.0 SCA"},"css":{"cardTitle":"CSS settings for iframe form","label":"Label","input":"Input","css":"CSS Text"}},"sepa":{"cardTitle":"Direct Debit SEPA","dueDate":{"label":"Payment due date (in days)","tooltipText":"Number of days after which the payment is debited (must be between 3 and 14 days)","error":"SEPA Due date is not valid"}},"directdebitach":{"cardTitle":"Direct Debit ACH"},"sepaguarantee":{"cardTitle":"Direct Debit SEPA with payment guarantee"},"applepay":{"cardTitle":"Apple Pay","buttonTitle":"Apple Pay Button Design","buttonTypeLabel":"Button Type","buttonType":{"default":"Default","buy":"Buy","donate":"Donate","book":"Book","contribute":"Contribute","checkout":"Checkout","order":"Order","pay":"Pay","subscribe":"Subscribe","tip":"Tip","rent":"Rent","reload":"Reload","support":"Support"},"buttonTheme":{"label":"Button Theme","dark":"Dark","light":"Light","outline":"Light-Outline"},"sellerName":{"label":"Business name","tooltipText":"The business name is rendered in the Apple Pay payment sheet, and this text will appear as PAY \'BUSINESS NAME\' so that the customer knows where he is paying to."},"buttonHeight":{"label":"Button Height","tooltipText":"Range from 30 to 64 pixels"},"buttonRadius":{"label":"Button Corner Radius","tooltipText":"Range from 0 to 10 pixels"},"displayFields":{"label":"Display the Apple Pay Button on","tooltipText":"The selected pages will display the Apple Pay Button, Just below the Proceed To Checkout button","emptyText":"Selected pages to display the Apple Pay Button","cartPage":"Shopping Cart Page","registerPage":"Register Page","miniCartPage":"Mini Cart Page","productPage":"Product Detail Page","productListingPage":"Product Listing Page"}},"googlepay":{"cardTitle":"Google Pay","buttonTitle":"Google Pay Button Design","buttonTypeLabel":"Button Type","buttonType":{"book":"Book","buy":"Buy","checkout":"Checkout","donate":"Donate","order":"Order","pay":"Pay","plain":"Plain","subscribe":"Subscribe"},"buttonTheme":{"label":"Button Theme","default":"Default","black":"Black","white":"White"},"sellerName":{"label":"Business name","tooltipText":"The business name is rendered in the Google Pay payment sheet, and this text will appear as PAY \'BUSINESS NAME\' so that the customer knows where he is paying to."},"merchantId":{"label":"Google Merchant ID","tooltipText":"Please note that Googles merchant identifier is required for processing the payment method in the live environment. Googles merchant identifier is issued after registration with the <a href=\'https://pay.google.com/business/console/\'>Google Pay and Wallet Console</a>. See also: <a href=\'https://developers.google.com/pay/api/web/guides/test-and-deploy/request-prod-access\'>Submit Request for Productive Access</a> if you need more information on the approval process and how to get a Google Merchant ID. Registration also involves submitting your connection with sufficient screenshots, so collect this information by enabling the payment method in test mode. To skip validating this field while saving the configuration, use this test ID, BCR2DN4XXXTN7FSI , to test and submit your connection to Google."},"buttonHeight":{"label":"Button Height","tooltipText":"Range from 40 to 100 pixels"},"displayFields":{"label":"Display the Google Pay Button on","tooltipText":"The selected pages will display the Google Pay Button, Just below the Proceed To Checkout button","emptyText":"Selected pages to display the Google Pay Button","cartPage":"Shopping Cart Page","registerPage":"Register Page","miniCartPage":"Mini Cart Page","productPage":"Product Detail Page","productListingPage":"Product Listing Page"}},"paypal":{"cardTitle":"PayPal","condition":"In order to use this option you must have billing agreement option enabled in your PayPal account. Please contact your account manager at PayPal.","configureLink":"To accept PayPal transactions, configure your PayPal API info in the <a href=\'https://admin.novalnet.de\' target=\'_blank\' style=\'text-decoration: underline; font-weight: bold; color:#0080c9;\'> Novalnet Admin Portal </a> > Projects > Choose your project > Payment Methods > Paypal > Configure"},"sofort":{"cardTitle":"Sofort"},"blik":{"cardTitle":"Blik"},"onlinebanktransfer":{"cardTitle":"Online Bank Transfer"},"ideal":{"cardTitle":"iDEAL"},"eps":{"cardTitle":"eps"},"cashpayment":{"cardTitle":"Barzahlen/viacash","dueDate":{"label":"Slip expiry date (in days)","tooltipText":"Number of days given to the buyer to pay at a store. If this field is left blank, 14 days will be set as slip expiry date by default"}},"giropay":{"cardTitle":"giropay"},"invoice":{"cardTitle":"Invoice","dueDate":{"label":"Payment due date (in days)","tooltipText":"Number of days given to the buyer to transfer the amount to Novalnet (must be greater than 7 days). If this field is left blank, 14 days will be set as due date by default."}},"invoiceguarantee":{"cardTitle":"Invoice with payment guarantee","dueDate":{"label":"Payment due date (in days)","tooltipText":"Number of days given to the buyer to transfer the amount to Novalnet (must be greater than 7 days). If this field is left blank, 14 days will be set as due date by default."}},"prepayment":{"cardTitle":"Prepayment","dueDate":{"label":"Payment due date (in days)","tooltipText":"Number of days given to the buyer to transfer the amount to Novalnet (must be between 7 and 28 days). If this field is left blank, 14 days will be set as due date by default"}},"bancontact":{"cardTitle":"Bancontact"},"postfinance":{"cardTitle":"PostFinance E-Finance"},"postfinancecard":{"cardTitle":"PostFinance Card"},"multibanco":{"cardTitle":"Multibanco"},"alipay":{"cardTitle":"AliPay"},"mbway":{"cardTitle":"MB Way"},"wechatpay":{"cardTitle":"WeChatPay"},"trustly":{"cardTitle":"Trustly"},"payconiq":{"cardTitle":"Payconiq"},"invoiceinstalment":{"cardTitle":"Instalment by Invoice"},"sepainstalment":{"cardTitle":"Instalment by Direct Debit SEPA"},"przelewy24":{"cardTitle":"Przelewy24"},"twint":{"cardTitle":"TWINT"},"guaranteeCondition":{"title":"Basic requirements:","country":"Allowed B2C countries: Germany, Austria, Switzerland","b2b":"Allowed B2B countries: European Union and Switzerland","currency":"Allowed currency: €","amount":"Minimum order amount: €9,99 or more","instalmentAmount":"Minimum order amount: €19,98 or more","instalmentCycleAmount":"Please note that the instalment cycle amount has to be a minimum of 9.99 EUR and the instalment cycles which do not meet, this criteria will not be displayed in the instalment plan","age":"Age limit: 18 years or more","address":"The billing address must be the same as the shipping address"}},"extension":{"Managetitle":"Manage Transaction","refundTitle":"Refund process","refundButton":"Refund","zeroAmountButton":"Book Amount","bookButton":"Book","amountTitle":"Refund amount","zeroAmountTitle":"Order Booked for this amount","updateTitle":"Amount","onholdTitle":"Capture/void","emptyMessage":"Select","onholdLabel":"Please select status","confirmLabel":"Confirm","cancelLabel":"Cancel","instalmentCancelLabel":"Instalment Cancel","instalmentAllCancelLabel":"Cancel All Instalment","instalmentRemainCancelLabel":"Cancel All Remaining Instalment","paidTooltip":"Total paid amount","refundTooltip":"Refunded amount","refundDescription":"Please enter the refund amount (in minimum unit of currency. E.g. enter 100 which is equal to 1.00)","zeroAmountDescription":"Please enter the amount (in minimum unit of currency. E.g. enter 100 which is equal to 1.00)","confirmMessage":"Are you sure you want to capture the payment?","cancelMessage":"Are you sure you want to cancel the payment?","instalmentCancelMessage":"Are you sure you want to cancel the instalment?","refundReference":"Refund / Cancellation Reason","refundSuccess":"Your refund was successful.","bookedSuccess":"Your amount booked was successful.","updateSuccess":"Your update was successful.","instalmentSuccessMsg":"Instalment canceled successfully.","onholdSuccess":"The transaction has been confirmed.","onholdCancel":"The transaction has been canceled"},"titleSuccess":"Success","titleError":"Error","amountError":"Invalid amount","failureMessage":"Please fill in the required fields","apiFailureMessage":"Please configure Novalnet Global Configuration","amountRefundError":"Invalid refund amount","successMessage":"Novalnet merchant details are configured successfully.","errorMessage":"There was an error and your request could not be completed","emptyMessage":"Enter Product activation key","emptyAccessKeyMessage":"Enter Payment access key","webhookUrlConfirm":"Are you sure you want to configure the Webhook URL in Novalnet Admin Portal?","webhookUrlSuccess":"Notification / Webhook URL is configured successfully in Novalnet Admin Portal","webhookUrlFailure":"Please enter the valid Webhook URL","instalmentNumber":"S.No","instalmentReference":"Novalnet Transaction ID","instalmentDate":"Next Instalment Date","instalmentAmount":"Amount","instalmentStatus":"Status","instalmentInfo":"Instalment Summary"}},"sw-privileges":{"permissions":{"novalnet_extension":{"label":"Novalnet Extensions"},"parents":{"novalnet_payment":"Novalnet"},"novalnet_payment":{"label":"Novalnet Settings"}}}}');let{Module:Z}=Shopware;Z.register("novalnet-payment",{type:"plugin",name:"NovalnetPayment",title:"novalnet-payment.module.title",description:"novalnet-payment.module.description",version:"1.0.0",targetVersion:"1.0.0",snippets:{"de-DE":U,"en-GB":q},routes:{index:{component:"novalnet-payment-settings",path:"index",meta:{parentPath:"sw.settings.index",privilege:"novalnet_payment.viewer"}},detail:{component:"novalnet-payment-settings",path:"settings",redirect:{name:"novalnet.payment.credentials"},children:{credentials:{component:"novalnet-payment-credentials",path:"credentials",meta:{parentPath:"sw.settings.index",privilege:"novalnet_payment.viewer"}},configuration:{component:"novalnet-payment-configuration",path:"configuration",meta:{parentPath:"sw.settings.index",privilege:"novalnet_payment.viewer"}}}}},settingsItem:{group:"plugins",to:"novalnet.payment.detail.credentials",iconComponent:"novalnet-payment-settings-icon",backgroundEnabled:!0,privilege:"novalnet_payment.viewer"}});let G=Shopware.Classes.ApiService;var K=class extends G{constructor(e,n,t="novalnet-payment"){super(e,n,t)}validateApiCredentials(e,n){return this.httpClient.post(`_action/${this.getApiBasePath()}/validate-api-credentials`,{clientId:e,accessKey:n},{headers:this.getBasicHeaders()}).then(e=>G.handleResponse(e))}refundPayment(e,n,t,a){let l=`_action/${this.getApiBasePath()}/refund-payment`;return this.httpClient.post(l,{orderNumber:e,refundAmount:n,reason:t,instalmentCycleTid:a},{headers:this.getBasicHeaders()}).then(e=>G.handleResponse(e))}instalmentCancel(e,n){let t=`_action/${this.getApiBasePath()}/instalment-cancel`;return this.httpClient.post(t,{orderNumber:e,cancelType:n},{headers:this.getBasicHeaders()}).then(e=>G.handleResponse(e))}BookOrderAmount(e,n){let t=`_action/${this.getApiBasePath()}/book-amount`;return this.httpClient.post(t,{orderId:e,bookedAmount:n},{headers:this.getBasicHeaders()}).then(e=>G.handleResponse(e))}managePayment(e,n){let t=`_action/${this.getApiBasePath()}/manage-payment`;return this.httpClient.post(t,{orderNumber:e,status:n},{headers:this.getBasicHeaders()}).then(e=>G.handleResponse(e))}getNovalnetAmount(e){let n=`_action/${this.getApiBasePath()}/transaction-amount`;return this.httpClient.post(n,{orderNumber:e},{headers:this.getBasicHeaders()}).then(e=>G.handleResponse(e))}configureWebhookUrl(e,n,t){let a=`_action/${this.getApiBasePath()}/webhook-url-configure`;return this.httpClient.post(a,{url:e,productActivationKey:n,paymentAccessKey:t},{headers:this.getBasicHeaders()}).then(e=>G.handleResponse(e))}};let{Application:j}=Shopware;j.addServiceProvider("NovalPaymentApiCredentialsService",e=>new K(j.getContainer("init").httpClient,e.loginService))}()}();